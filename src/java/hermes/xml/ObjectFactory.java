//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.08.20 at 01:38:49 BST 
//


package hermes.xml;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the hermes.xml package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends hermes.xml.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap(16, 0.75F);
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static hermes.xml.impl.runtime.GrammarInfo grammarInfo = new hermes.xml.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (hermes.xml.ObjectFactory.class));
    public final static java.lang.Class version = (hermes.xml.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((hermes.xml.XMLTextMessage.class), "hermes.xml.impl.XMLTextMessageImpl");
        defaultImplementations.put((hermes.xml.XMLBytesMessage.class), "hermes.xml.impl.XMLBytesMessageImpl");
        defaultImplementations.put((hermes.xml.XMLMapMessage.class), "hermes.xml.impl.XMLMapMessageImpl");
        defaultImplementations.put((hermes.xml.Property.class), "hermes.xml.impl.PropertyImpl");
        defaultImplementations.put((hermes.xml.Content.class), "hermes.xml.impl.ContentImpl");
        defaultImplementations.put((hermes.xml.XMLObjectMessage.class), "hermes.xml.impl.XMLObjectMessageImpl");
        defaultImplementations.put((hermes.xml.Entry.class), "hermes.xml.impl.EntryImpl");
        defaultImplementations.put((hermes.xml.XMLMessage.class), "hermes.xml.impl.XMLMessageImpl");
        defaultImplementations.put((hermes.xml.MessageSet.class), "hermes.xml.impl.MessageSetImpl");
        rootTagMap.put(new javax.xml.namespace.QName("", "content"), (hermes.xml.Content.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: hermes.xml
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param value
     *     the value of the property to be set
     * @param name
     *     the name of the property to retrieve
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of XMLTextMessage
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.xml.XMLTextMessage createXMLTextMessage()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.xml.impl.XMLTextMessageImpl();
    }

    /**
     * Create an instance of XMLBytesMessage
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.xml.XMLBytesMessage createXMLBytesMessage()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.xml.impl.XMLBytesMessageImpl();
    }

    /**
     * Create an instance of XMLMapMessage
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.xml.XMLMapMessage createXMLMapMessage()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.xml.impl.XMLMapMessageImpl();
    }

    /**
     * Create an instance of Property
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.xml.Property createProperty()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.xml.impl.PropertyImpl();
    }

    /**
     * Create an instance of Content
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.xml.Content createContent()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.xml.impl.ContentImpl();
    }

    /**
     * Create an instance of XMLObjectMessage
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.xml.XMLObjectMessage createXMLObjectMessage()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.xml.impl.XMLObjectMessageImpl();
    }

    /**
     * Create an instance of Entry
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.xml.Entry createEntry()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.xml.impl.EntryImpl();
    }

    /**
     * Create an instance of XMLMessage
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.xml.XMLMessage createXMLMessage()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.xml.impl.XMLMessageImpl();
    }

    /**
     * Create an instance of MessageSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.xml.MessageSet createMessageSet()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.xml.impl.MessageSetImpl();
    }

}
