//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.01.03 at 11:55:46 GMT 
//


package hermes.config.impl;

public class ConfigImpl
    extends hermes.config.impl.HermesConfigImpl
    implements hermes.config.Config, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, hermes.config.impl.runtime.UnmarshallableObject, hermes.config.impl.runtime.XMLSerializable, hermes.config.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (hermes.config.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (hermes.config.Config.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "config";
    }

    public hermes.config.impl.runtime.UnmarshallingEventHandler createUnmarshaller(hermes.config.impl.runtime.UnmarshallingContext context) {
        return new hermes.config.impl.ConfigImpl.Unmarshaller(context);
    }

    public void serializeBody(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "config");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (hermes.config.Config.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000"
+"\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000"
+"\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000\u001dcom.sun.msv.gramm"
+"ar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.OneOr"
+"MoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp"
+"\u0000psq\u0000~\u0000\u0000q\u0000~\u00005p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000/ppsq\u0000~\u00001q\u0000~\u00005psr\u0000 com."
+"sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameCla"
+"ssq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u00005psr\u00002com.sun.msv.grammar.Expression$AnyStr"
+"ingExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u00004\u0001psr\u0000 com.sun.msv.gramma"
+"r.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000?psr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000Fxq\u0000~\u0000At\u0000\"hermes.config.ClasspathGroupConfigt\u0000+http:"
+"//java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005psr"
+"\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng"
+"/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util"
+"/StringPair;xq\u0000~\u0000\u0004ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnames"
+"paceUriq\u0000~\u0000FL\u0000\btypeNameq\u0000~\u0000FL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/dat"
+"atype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XM"
+"LSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProces"
+"sor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpa"
+"ceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$N"
+"ullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004ppsr\u0000\u001bcom.sun.msv.util.Stri"
+"ngPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000FL\u0000\fnamespaceURIq\u0000~\u0000Fxpq\u0000~\u0000"
+"Wq\u0000~\u0000Vsq\u0000~\u0000Et\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-insta"
+"nceq\u0000~\u0000Dsq\u0000~\u0000Et\u0000\u000eclasspathGroupt\u0000\u0000q\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u00001q\u0000~\u00005ps"
+"q\u0000~\u0000\u0000q\u0000~\u00005p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000/ppsq\u0000~\u00001q\u0000~\u00005psq\u0000~\u0000;q\u0000~\u00005"
+"pq\u0000~\u0000>q\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000Et\u0000\u0019hermes.config.WatchConfigq\u0000~\u0000Isq\u0000~\u0000"
+"/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000Oq\u0000~\u0000_q\u0000~\u0000Dsq\u0000~\u0000Et\u0000\u0005watchq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/"
+"ppsq\u0000~\u00001q\u0000~\u00005psq\u0000~\u0000\u0000q\u0000~\u00005p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000/ppsq\u0000~\u00001q\u0000"
+"~\u00005psq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000>q\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000Et\u0000\u001ahermes.config.Naming"
+"Configq\u0000~\u0000Isq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000Oq\u0000~\u0000_q\u0000~\u0000Dsq\u0000~\u0000Et\u0000\u0006namin"
+"gq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u00001q\u0000~\u00005psq\u0000~\u0000\u0000q\u0000~\u00005p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp"
+"\u0000sq\u0000~\u0000/ppsq\u0000~\u00001q\u0000~\u00005psq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000>q\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000Et\u0000\u001cher"
+"mes.config.RendererConfigq\u0000~\u0000Isq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000Oq\u0000~\u0000_"
+"q\u0000~\u0000Dsq\u0000~\u0000Et\u0000\brendererq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u00001q\u0000~\u00005psq\u0000~\u0000\u0000q\u0000"
+"~\u00005p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000/ppsq\u0000~\u00001q\u0000~\u00005psq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000>q"
+"\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000Et\u0000\u001dhermes.config.ClasspathConfigq\u0000~\u0000Isq\u0000~\u0000/pp"
+"sq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000Oq\u0000~\u0000_q\u0000~\u0000Dsq\u0000~\u0000Et\u0000\u0006loaderq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/pp"
+"sq\u0000~\u00001q\u0000~\u00005psq\u0000~\u0000\u0000q\u0000~\u00005p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000/ppsq\u0000~\u00001q\u0000~\u0000"
+"5psq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000>q\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000Et\u0000\u001bhermes.config.FactoryC"
+"onfigq\u0000~\u0000Isq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000Oq\u0000~\u0000_q\u0000~\u0000Dsq\u0000~\u0000Et\u0000\u0007factor"
+"yq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u00001q\u0000~\u00005psq\u0000~\u0000\u0000q\u0000~\u00005p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp"
+"\u0000sq\u0000~\u0000/ppsq\u0000~\u00001q\u0000~\u00005psq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000>q\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000Et\u0000\u001aher"
+"mes.config.RemoteConfigq\u0000~\u0000Isq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000Oq\u0000~\u0000_q\u0000"
+"~\u0000Dsq\u0000~\u0000Et\u0000\u0006remoteq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u00001q\u0000~\u00005psq\u0000~\u0000\u0000q\u0000~\u00005p"
+"\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000/ppsq\u0000~\u00001q\u0000~\u00005psq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000>q\u0000~\u0000B"
+"q\u0000~\u0000Dsq\u0000~\u0000Et\u0000\u0017hermes.config.JDBCStoreq\u0000~\u0000Isq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u0000"
+"5pq\u0000~\u0000Oq\u0000~\u0000_q\u0000~\u0000Dsq\u0000~\u0000Et\u0000\tjdbcStoreq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u00001q"
+"\u0000~\u00005psq\u0000~\u0000\u0000q\u0000~\u00005p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000Lppsr\u0000#com.sun.msv.datatype.x"
+"sd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000Qq\u0000~\u0000Vt\u0000\u0006string"
+"sr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Y\u0001q\u0000~\u0000\\sq\u0000~\u0000]q\u0000~\u0000\u00ceq\u0000~\u0000Vsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000"
+"Oq\u0000~\u0000_q\u0000~\u0000Dsq\u0000~\u0000Et\u0000\u0007filtersq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000\u0000q\u0000~\u00005p\u0000sq"
+"\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000/ppsq\u0000~\u00001q\u0000~\u00005psq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000>q\u0000~\u0000Bq\u0000~"
+"\u0000Dsq\u0000~\u0000Et\u0000\u001chermes.config.QuickFIXConfigq\u0000~\u0000Isq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000"
+"~\u00005pq\u0000~\u0000Oq\u0000~\u0000_q\u0000~\u0000Dsq\u0000~\u0000Et\u0000\bquickFIXq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;"
+"q\u0000~\u00005pq\u0000~\u0000\u00cbsq\u0000~\u0000Et\u0000\u000eauditDirectoryq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000"
+"~\u00005psq\u0000~\u0000Lppsr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\n"
+"baseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000Q"
+"q\u0000~\u0000Vt\u0000\u0003intq\u0000~\u0000Zsr\u0000*com.sun.msv.datatype.xsd.MaxInclusiveFac"
+"et\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.datatyp"
+"e.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun"
+".msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixe"
+"dZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u00ecL\u0000\fconcreteTypet\u0000\'Lcom"
+"/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000Fxq\u0000~\u0000Spp"
+"q\u0000~\u0000Z\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00f0ppq\u0000~\u0000Z\u0000\u0000sr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00ebq\u0000~\u0000Vt\u0000\u0004longq\u0000~\u0000Zsq\u0000~\u0000\u00efppq\u0000~\u0000Z\u0000\u0001sq\u0000~\u0000\u00f6ppq\u0000~\u0000Z\u0000\u0000"
+"sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00ebq\u0000~"
+"\u0000Vt\u0000\u0007integerq\u0000~\u0000Zsr\u0000,com.sun.msv.datatype.xsd.FractionDigits"
+"Facet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTyp"
+"eWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u00f3ppq\u0000~\u0000Z\u0001\u0000sr\u0000#com"
+".sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Qq\u0000~\u0000Vt\u0000\u0007dec"
+"imalq\u0000~\u0000Zq\u0000~\u0001\u0004t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000\u00fet\u0000\fminInclusivesr\u0000\u000ej"
+"ava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b"
+"\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000\u00fet\u0000\fmaxInclusivesq\u0000~\u0001\b\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\u00f9q\u0000~\u0001\u0007sr\u0000"
+"\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0001\t\u0080\u0000\u0000\u0000q\u0000~\u0000\u00f9q\u0000~\u0001\u000bsq\u0000"
+"~\u0001\r\u007f\u00ff\u00ff\u00ffq\u0000~\u0000\\sq\u0000~\u0000]q\u0000~\u0000\u00eeq\u0000~\u0000Vsq\u0000~\u0000Et\u0000\u0015autoBrowseRefreshRateq\u0000"
+"~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005psq\u0000~\u0000Lppsr\u0000$com.sun.msv.datatype"
+".xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Qq\u0000~\u0000Vt\u0000\u0007booleanq\u0000~\u0000Zq\u0000~\u0000\\sq"
+"\u0000~\u0000]q\u0000~\u0001\u0018q\u0000~\u0000Vsq\u0000~\u0000Et\u0000\u0014base64EncodeMessagesq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/p"
+"psq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0001\u0015sq\u0000~\u0000Et\u0000\u0014copyJMSCorrelationIDq\u0000~\u0000dq\u0000~\u0000Dsq\u0000"
+"~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0001\u0015sq\u0000~\u0000Et\u0000\u0011copyJMSExpirationq\u0000~\u0000dq\u0000~\u0000Dsq"
+"\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0001\u0015sq\u0000~\u0000Et\u0000\u000fcopyJMSPriorityq\u0000~\u0000dq\u0000~\u0000Dsq\u0000"
+"~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0001\u0015sq\u0000~\u0000Et\u0000\u0019copyJMSProviderPropertiesq\u0000~\u0000"
+"dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0001\u0015sq\u0000~\u0000Et\u0000\u000ecopyJMSReplyToq\u0000~\u0000dq"
+"\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0001\u0015sq\u0000~\u0000Et\u0000\u000bcopyJMSTypeq\u0000~\u0000dq\u0000~\u0000Ds"
+"q\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0001\u0015sq\u0000~\u0000Et\u0000\u0014correctDropSemanticsq\u0000~\u0000dq\u0000"
+"~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0001\u0015sq\u0000~\u0000Et\u0000\u0016deliveryModePersistentq"
+"\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0001\u0015sq\u0000~\u0000Et\u0000\u0013displayFactoryAdm"
+"inq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000\u00cbsq\u0000~\u0000Et\u0000\u000bdisplayNameq\u0000~"
+"\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0001\u0015sq\u0000~\u0000Et\u0000\u001bembeddedMessageInBr"
+"owsePaneq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0001\u0015sq\u0000~\u0000Et\u0000\fenableJy"
+"thonq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000\u00cbsq\u0000~\u0000Et\u0000\u0019lastEditedBy"
+"HermesVersionq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000\u00cbsq\u0000~\u0000Et\u0000\u0010las"
+"tEditedByUserq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000\u00cbsq\u0000~\u0000Et\u0000\u000bloo"
+"kAndFeelq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000\u00e9sq\u0000~\u0000Et\u0000\u001bmaxColum"
+"nsInStatisticsTableq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000\u00e9sq\u0000~\u0000E"
+"t\u0000\u0018maxMessagesInBrowserPaneq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~"
+"\u0000\u00e9sq\u0000~\u0000Et\u0000\u0011maxThreadPoolSizeq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000"
+"~\u0000\u00cbsq\u0000~\u0000Et\u0000\u000fmessageFilesDirq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~"
+"\u0000\u00cbsq\u0000~\u0000Et\u0000\u001amessageStoreMessageFactoryq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000"
+";q\u0000~\u00005pq\u0000~\u0000\u00cbsq\u0000~\u0000Et\u0000\u0013messageStoreSessionq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq"
+"\u0000~\u0000;q\u0000~\u00005psq\u0000~\u0000Lppq\u0000~\u0000\u00f9q\u0000~\u0000\\sq\u0000~\u0000]q\u0000~\u0000\u00faq\u0000~\u0000Vsq\u0000~\u0000Et\u0000\u001aqueueBr"
+"owseConsumerTimeoutq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0001\u0015sq\u0000~\u0000E"
+"t\u0000\u001ascrollMessagesDuringBrowseq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq"
+"\u0000~\u0000\u00cbsq\u0000~\u0000Et\u0000\fselectorImplq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000\u00e9"
+"sq\u0000~\u0000Et\u0000\u0007versionq\u0000~\u0000dq\u0000~\u0000Dsq\u0000~\u0000/ppsq\u0000~\u0000;q\u0000~\u00005pq\u0000~\u0000Oq\u0000~\u0000_q\u0000~\u0000"
+"Dsq\u0000~\u0000Et\u0000\u0006configq\u0000~\u0000dsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$"
+"ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHa"
+"sh\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/ms"
+"v/grammar/ExpressionPool;xp\u0000\u0000\u0000|\u0001pq\u0000~\u0001lq\u0000~\u0000\u0013q\u0000~\u0001Lq\u0000~\u0001<q\u0000~\u0000\u00d8q\u0000"
+"~\u00007q\u0000~\u0000hq\u0000~\u0000vq\u0000~\u0000\u0084q\u0000~\u0000\u0092q\u0000~\u0000\u00a0q\u0000~\u0000\u00aeq\u0000~\u0000\u00bcq\u0000~\u0000\u000fq\u0000~\u0001$q\u0000~\u0001\u001cq\u0000~\u0000*q\u0000"
+"~\u0000(q\u0000~\u0000\u0011q\u0000~\u0001`q\u0000~\u0001 q\u0000~\u0000\u00c7q\u0000~\u00003q\u0000~\u0000fq\u0000~\u0000tq\u0000~\u0000\u0082q\u0000~\u0000\u0090q\u0000~\u0000\u009eq\u0000~\u0000\u00acq\u0000"
+"~\u0000\u00baq\u0000~\u0000\u00daq\u0000~\u00009q\u0000~\u0000jq\u0000~\u0000xq\u0000~\u0000\u0086q\u0000~\u0000\u0094q\u0000~\u0000\u00a2q\u0000~\u0000\u00b0q\u0000~\u0000\u00beq\u0000~\u0000\u001aq\u0000~\u0001zq\u0000"
+"~\u0001(q\u0000~\u0000&q\u0000~\u0001hq\u0000~\u0000\u001dq\u0000~\u0000\u00c8q\u0000~\u0001dq\u0000~\u0000\u00dfq\u0000~\u0000Jq\u0000~\u0000oq\u0000~\u0000}q\u0000~\u0000\u008bq\u0000~\u0000\u0099q\u0000"
+"~\u0000\u00a7q\u0000~\u0000\u00b5q\u0000~\u0000\u00c3q\u0000~\u0000\u00d2q\u0000~\u0001~q\u0000~\u0001\u0082q\u0000~\u0000\u0018q\u0000~\u0001Dq\u0000~\u0000\fq\u0000~\u0000\u00e3q\u0000~\u0000\u000bq\u0000~\u0000 q\u0000"
+"~\u00014q\u0000~\u0000\u001fq\u0000~\u0000\u00caq\u0000~\u0000\u00d6q\u0000~\u0000\u0017q\u0000~\u0001\u0013q\u0000~\u0000\"q\u0000~\u0001@q\u0000~\u0000%q\u0000~\u0000.q\u0000~\u0000\u00e7q\u0000~\u0000)q\u0000"
+"~\u0000\tq\u0000~\u0000$q\u0000~\u0000+q\u0000~\u0000\u0019q\u0000~\u0000\u0010q\u0000~\u0000-q\u0000~\u0001vq\u0000~\u0000\u001eq\u0000~\u00000q\u0000~\u0000eq\u0000~\u0000sq\u0000~\u0000\u0081q\u0000"
+"~\u0000\u008fq\u0000~\u0000\u009dq\u0000~\u0000\u00abq\u0000~\u0000\u00b9q\u0000~\u0001Hq\u0000~\u0000\rq\u0000~\u0000#q\u0000~\u0001Pq\u0000~\u0000\nq\u0000~\u0000\u0014q\u0000~\u0000,q\u0000~\u0001pq\u0000"
+"~\u0000\u001bq\u0000~\u0000\u0015q\u0000~\u0000\u001cq\u0000~\u00010q\u0000~\u0001\\q\u0000~\u0000\u00dbq\u0000~\u0000:q\u0000~\u0000kq\u0000~\u0000yq\u0000~\u0000\u0087q\u0000~\u0000\u0095q\u0000~\u0000\u00a3q\u0000"
+"~\u0000\u00b1q\u0000~\u0000\u00bfq\u0000~\u00018q\u0000~\u0001Tq\u0000~\u0001,q\u0000~\u0000\u0012q\u0000~\u0000\u000eq\u0000~\u0000!q\u0000~\u0001Xq\u0000~\u0000\u0016q\u0000~\u0000\'x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends hermes.config.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(hermes.config.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(hermes.config.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return hermes.config.impl.ConfigImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("config" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "auditDirectory");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "autoBrowseRefreshRate");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "base64EncodeMessages");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSCorrelationID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSExpiration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSPriority");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSProviderProperties");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSReplyTo");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "correctDropSemantics");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "deliveryModePersistent");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "displayFactoryAdmin");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "displayName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "embeddedMessageInBrowsePane");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "enableJython");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "lastEditedByHermesVersion");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "lastEditedByUser");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "lookAndFeel");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "maxColumnsInStatisticsTable");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "maxMessagesInBrowserPane");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "maxThreadPoolSize");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "messageFilesDir");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "messageStoreMessageFactory");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "messageStoreSession");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "queueBrowseConsumerTimeout");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "scrollMessagesDuringBrowse");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "selectorImpl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("classpathGroup" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterElement((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("watch" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterElement((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("naming" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterElement((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("renderer" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterElement((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("loader" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterElement((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("factory" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterElement((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("remote" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterElement((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("jdbcStore" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterElement((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("filters" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterElement((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("quickFIX" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterElement((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "auditDirectory");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "autoBrowseRefreshRate");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "base64EncodeMessages");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSCorrelationID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSExpiration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSPriority");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSProviderProperties");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSReplyTo");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "correctDropSemantics");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "deliveryModePersistent");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "displayFactoryAdmin");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "displayName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "embeddedMessageInBrowsePane");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "enableJython");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "lastEditedByHermesVersion");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "lastEditedByUser");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "lookAndFeel");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "maxColumnsInStatisticsTable");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "maxMessagesInBrowserPane");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "maxThreadPoolSize");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "messageFilesDir");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "messageStoreMessageFactory");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "messageStoreSession");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "queueBrowseConsumerTimeout");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "scrollMessagesDuringBrowse");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "selectorImpl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromLeaveElement((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("config" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        if (("auditDirectory" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("autoBrowseRefreshRate" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("base64EncodeMessages" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("copyJMSCorrelationID" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("copyJMSExpiration" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("copyJMSPriority" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("copyJMSProviderProperties" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("copyJMSReplyTo" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("copyJMSType" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("correctDropSemantics" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("deliveryModePersistent" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("displayFactoryAdmin" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("displayName" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("embeddedMessageInBrowsePane" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("enableJython" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("lastEditedByHermesVersion" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("lastEditedByUser" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("lookAndFeel" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("maxColumnsInStatisticsTable" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("maxMessagesInBrowserPane" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("maxThreadPoolSize" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("messageFilesDir" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("messageStoreMessageFactory" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("messageStoreSession" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("queueBrowseConsumerTimeout" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("scrollMessagesDuringBrowse" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("selectorImpl" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("version" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromEnterAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "auditDirectory");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "autoBrowseRefreshRate");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "base64EncodeMessages");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSCorrelationID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSExpiration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSPriority");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSProviderProperties");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSReplyTo");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "copyJMSType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "correctDropSemantics");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "deliveryModePersistent");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "displayFactoryAdmin");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "displayName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "embeddedMessageInBrowsePane");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "enableJython");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "lastEditedByHermesVersion");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "lastEditedByUser");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "lookAndFeel");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "maxColumnsInStatisticsTable");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "maxMessagesInBrowserPane");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "maxThreadPoolSize");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "messageFilesDir");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "messageStoreMessageFactory");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "messageStoreSession");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "queueBrowseConsumerTimeout");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "scrollMessagesDuringBrowse");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "selectorImpl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromLeaveAttribute((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "auditDirectory");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "autoBrowseRefreshRate");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "base64EncodeMessages");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "copyJMSCorrelationID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "copyJMSExpiration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "copyJMSPriority");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "copyJMSProviderProperties");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "copyJMSReplyTo");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "copyJMSType");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "correctDropSemantics");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "deliveryModePersistent");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "displayFactoryAdmin");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "displayName");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "embeddedMessageInBrowsePane");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "enableJython");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "lastEditedByHermesVersion");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "lastEditedByUser");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "lookAndFeel");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "maxColumnsInStatisticsTable");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "maxMessagesInBrowserPane");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "maxThreadPoolSize");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "messageFilesDir");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "messageStoreMessageFactory");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "messageStoreSession");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "queueBrowseConsumerTimeout");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "scrollMessagesDuringBrowse");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "selectorImpl");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "version");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            spawnHandlerFromText((((hermes.config.impl.HermesConfigImpl)hermes.config.impl.ConfigImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
