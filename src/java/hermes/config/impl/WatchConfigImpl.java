//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.09.27 at 12:37:15 BST 
//


package hermes.config.impl;

public class WatchConfigImpl implements hermes.config.WatchConfig, com.sun.xml.bind.JAXBObject, hermes.config.impl.runtime.UnmarshallableObject, hermes.config.impl.runtime.XMLSerializable, hermes.config.impl.runtime.ValidatableObject
{

    protected boolean has_UpdateFrequency;
    protected long _UpdateFrequency;
    protected boolean has_DefaultAgeAlertThreshold;
    protected long _DefaultAgeAlertThreshold;
    protected boolean has_DefaultDepthAlertThreshold;
    protected int _DefaultDepthAlertThreshold;
    protected java.lang.String _Id;
    protected boolean has_ShowAge;
    protected boolean _ShowAge;
    protected com.sun.xml.bind.util.ListImpl _Destination;
    public final static java.lang.Class version = (hermes.config.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (hermes.config.WatchConfig.class);
    }

    public long getUpdateFrequency() {
        return _UpdateFrequency;
    }

    public void setUpdateFrequency(long value) {
        _UpdateFrequency = value;
        has_UpdateFrequency = true;
    }

    public long getDefaultAgeAlertThreshold() {
        return _DefaultAgeAlertThreshold;
    }

    public void setDefaultAgeAlertThreshold(long value) {
        _DefaultAgeAlertThreshold = value;
        has_DefaultAgeAlertThreshold = true;
    }

    public int getDefaultDepthAlertThreshold() {
        return _DefaultDepthAlertThreshold;
    }

    public void setDefaultDepthAlertThreshold(int value) {
        _DefaultDepthAlertThreshold = value;
        has_DefaultDepthAlertThreshold = true;
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public boolean isShowAge() {
        return _ShowAge;
    }

    public void setShowAge(boolean value) {
        _ShowAge = value;
        has_ShowAge = true;
    }

    protected com.sun.xml.bind.util.ListImpl _getDestination() {
        if (_Destination == null) {
            _Destination = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Destination;
    }

    public java.util.List getDestination() {
        return _getDestination();
    }

    public hermes.config.impl.runtime.UnmarshallingEventHandler createUnmarshaller(hermes.config.impl.runtime.UnmarshallingContext context) {
        return new hermes.config.impl.WatchConfigImpl.Unmarshaller(context);
    }

    public void serializeBody(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = ((_Destination == null)? 0 :_Destination.size());
        while (idx6 != len6) {
            context.startElement("", "destination");
            int idx_0 = idx6;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Destination.get(idx_0 ++)), "Destination");
            context.endNamespaceDecls();
            int idx_1 = idx6;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Destination.get(idx_1 ++)), "Destination");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Destination.get(idx6 ++)), "Destination");
            context.endElement();
        }
    }

    public void serializeAttributes(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = ((_Destination == null)? 0 :_Destination.size());
        if (has_DefaultAgeAlertThreshold) {
            context.startAttribute("", "defaultAgeAlertThreshold");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _DefaultAgeAlertThreshold)), "DefaultAgeAlertThreshold");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_DefaultDepthAlertThreshold) {
            context.startAttribute("", "defaultDepthAlertThreshold");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _DefaultDepthAlertThreshold)), "DefaultDepthAlertThreshold");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Id!= null) {
            context.startAttribute("", "id");
            try {
                context.text(((java.lang.String) _Id), "Id");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_ShowAge) {
            context.startAttribute("", "showAge");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ShowAge)), "ShowAge");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_UpdateFrequency) {
            context.startAttribute("", "updateFrequency");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _UpdateFrequency)), "UpdateFrequency");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx6 != len6) {
            idx6 += 1;
        }
    }

    public void serializeURIs(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = ((_Destination == null)? 0 :_Destination.size());
        while (idx6 != len6) {
            idx6 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (hermes.config.WatchConfig.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom."
+"sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv."
+"grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Unary"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee"
+"\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ec"
+"om.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredA"
+"ttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011pp\u0000s"
+"q\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0010psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0012xq\u0000~\u0000\u0003q\u0000~\u0000\u0010psr\u00002com.sun.ms"
+"v.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000"
+"~\u0000\u000f\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom."
+"sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gramma"
+"r.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001dpsr\u0000#com"
+".sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Lj"
+"ava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000$xq\u0000~\u0000\u001ft\u0000\u001fhermes.config.D"
+"estinationConfigt\u0000+http://java.sun.com/jaxb/xjc/dummy-elemen"
+"tssq\u0000~\u0000\nppsq\u0000~\u0000\u0019q\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004"
+"namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv."
+"datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xs"
+"d.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.C"
+"oncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatyp"
+"eImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000$L\u0000\btypeNameq\u0000~\u0000$L\u0000\nwhite"
+"Spacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 h"
+"ttp://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datat"
+"ype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.m"
+"sv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun."
+"msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003pps"
+"r\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000$L\u0000"
+"\fnamespaceURIq\u0000~\u0000$xpq\u0000~\u00005q\u0000~\u00004sq\u0000~\u0000#t\u0000\u0004typet\u0000)http://www.w3."
+"org/2001/XMLSchema-instanceq\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u000bdestinationt\u0000\u0000q\u0000~\u0000\""
+"sq\u0000~\u0000\nppsq\u0000~\u0000\u0019q\u0000~\u0000\u0010psq\u0000~\u0000*ppsr\u0000!com.sun.msv.datatype.xsd.Lon"
+"gType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedT"
+"ype\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDa"
+"tatypeImpl;xq\u0000~\u0000/q\u0000~\u00004t\u0000\u0004longq\u0000~\u00008sr\u0000*com.sun.msv.datatype.x"
+"sd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd."
+"RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009c"
+"om.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro"
+"\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000HL\u0000\fc"
+"oncreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tface"
+"tNameq\u0000~\u0000$xq\u0000~\u00001ppq\u0000~\u00008\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInc"
+"lusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Lppq\u0000~\u00008\u0000\u0000sr\u0000$com.sun.msv.datatyp"
+"e.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Gq\u0000~\u00004t\u0000\u0007integerq\u0000~\u00008sr\u0000,co"
+"m.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scal"
+"exr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintF"
+"acetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Oppq\u0000~\u00008\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.N"
+"umberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000/q\u0000~\u00004t\u0000\u0007decimalq\u0000~\u00008q\u0000~\u0000[t\u0000\u000efracti"
+"onDigits\u0000\u0000\u0000\u0000q\u0000~\u0000Ut\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000"
+"\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000Ut\u0000\fma"
+"xInclusivesq\u0000~\u0000_\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000:sq\u0000~\u0000;q\u0000~\u0000Jq\u0000~\u00004sq\u0000~\u0000#t\u0000\u0018defaul"
+"tAgeAlertThresholdq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\nppsq\u0000~\u0000\u0019q\u0000~\u0000\u0010psq\u0000~\u0000*ppsr\u0000 "
+"com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Gq\u0000~\u00004t\u0000\u0003int"
+"q\u0000~\u00008sq\u0000~\u0000Kppq\u0000~\u00008\u0000\u0001sq\u0000~\u0000Rppq\u0000~\u00008\u0000\u0000q\u0000~\u0000Iq\u0000~\u0000Iq\u0000~\u0000^sr\u0000\u0011java.l"
+"ang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000`\u0080\u0000\u0000\u0000q\u0000~\u0000Iq\u0000~\u0000bsq\u0000~\u0000o\u007f\u00ff\u00ff\u00ff"
+"q\u0000~\u0000:sq\u0000~\u0000;q\u0000~\u0000lq\u0000~\u00004sq\u0000~\u0000#t\u0000\u001adefaultDepthAlertThresholdq\u0000~\u0000"
+"Bq\u0000~\u0000\"sq\u0000~\u0000\nppsq\u0000~\u0000\u0019q\u0000~\u0000\u0010psq\u0000~\u0000*ppsr\u0000#com.sun.msv.datatype.x"
+"sd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000/q\u0000~\u00004t\u0000\u0006string"
+"sr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00007\u0001q\u0000~\u0000:sq\u0000~\u0000;q\u0000~\u0000zq\u0000~\u00004sq\u0000~\u0000#t\u0000\u0002idq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000"
+"~\u0000\nppsq\u0000~\u0000\u0019q\u0000~\u0000\u0010psq\u0000~\u0000*ppsr\u0000$com.sun.msv.datatype.xsd.Boolea"
+"nType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000/q\u0000~\u00004t\u0000\u0007booleanq\u0000~\u00008q\u0000~\u0000:sq\u0000~\u0000;q\u0000~\u0000\u0085q\u0000"
+"~\u00004sq\u0000~\u0000#t\u0000\u0007showAgeq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\nppsq\u0000~\u0000\u0019q\u0000~\u0000\u0010pq\u0000~\u0000Esq\u0000~\u0000#"
+"t\u0000\u000fupdateFrequencyq\u0000~\u0000Bq\u0000~\u0000\"sr\u0000\"com.sun.msv.grammar.Expressi"
+"onPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expressi"
+"onPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$C"
+"losedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom"
+"/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0010\u0001pq\u0000~\u0000\u0089q\u0000~\u0000\u0018q\u0000~\u0000gq\u0000~\u0000\u000e"
+"q\u0000~\u0000\u000bq\u0000~\u0000\u0017q\u0000~\u0000\bq\u0000~\u0000\u0015q\u0000~\u0000Cq\u0000~\u0000uq\u0000~\u0000\u0005q\u0000~\u0000(q\u0000~\u0000\u0006q\u0000~\u0000\u0007q\u0000~\u0000\tq\u0000~\u0000\u0080"
+"x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends hermes.config.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(hermes.config.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------");
        }

        protected Unmarshaller(hermes.config.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return hermes.config.impl.WatchConfigImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        if (("destination" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "showAge");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "defaultAgeAlertThreshold");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  15 :
                        if (("destination" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "defaultDepthAlertThreshold");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "clientID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "domain");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "durable");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "myHermes");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "selector");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "shortName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "unsubscribeOnClose");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "useLocalRenderer");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("properties" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterElement((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("renderer" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterElement((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterElement((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "updateFrequency");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ShowAge = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ShowAge = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultAgeAlertThreshold = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_DefaultAgeAlertThreshold = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultDepthAlertThreshold = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_DefaultDepthAlertThreshold = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _UpdateFrequency = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_UpdateFrequency = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "showAge");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  17 :
                        if (("destination" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "defaultAgeAlertThreshold");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "defaultDepthAlertThreshold");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "clientID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "domain");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "durable");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "myHermes");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "selector");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "shortName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "unsubscribeOnClose");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "useLocalRenderer");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromLeaveElement((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname)));
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "updateFrequency");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  9 :
                        if (("showAge" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  0 :
                        if (("defaultAgeAlertThreshold" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  3 :
                        if (("defaultDepthAlertThreshold" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  16 :
                        if (("className" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("clientID" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("domain" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("durable" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("myHermes" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("name" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("selector" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("shortName" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("unsubscribeOnClose" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("useLocalRenderer" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname)));
                        return ;
                    case  12 :
                        if (("updateFrequency" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  11 :
                        if (("showAge" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "showAge");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "defaultAgeAlertThreshold");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  14 :
                        if (("updateFrequency" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "defaultDepthAlertThreshold");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "clientID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "domain");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "durable");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "myHermes");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "selector");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "shortName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "unsubscribeOnClose");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "useLocalRenderer");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromLeaveAttribute((hermes.config.impl.DestinationConfigImpl.class), 17, ___uri, ___local, ___qname)));
                        return ;
                    case  5 :
                        if (("defaultDepthAlertThreshold" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("defaultAgeAlertThreshold" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "updateFrequency");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  8 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  18 :
                            revertToParentFromText(value);
                            return ;
                        case  13 :
                            eatText5(value);
                            state = 14;
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  4 :
                            eatText4(value);
                            state = 5;
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "showAge");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 12;
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "defaultAgeAlertThreshold");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  7 :
                            eatText1(value);
                            state = 8;
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "defaultDepthAlertThreshold");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  16 :
                            attIdx = context.getAttribute("", "className");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "clientID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "domain");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "durable");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "myHermes");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "selector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "shortName");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "unsubscribeOnClose");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "useLocalRenderer");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromText((hermes.config.impl.DestinationConfigImpl.class), 17, value)));
                            return ;
                        case  1 :
                            eatText3(value);
                            state = 2;
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "updateFrequency");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 15;
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  10 :
                            eatText2(value);
                            state = 11;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
