//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.08.07 at 02:08:02 BST 
//


package hermes.config.impl;

public class FactoryConfigImpl implements hermes.config.FactoryConfig, com.sun.xml.bind.JAXBObject, hermes.config.impl.runtime.UnmarshallableObject, hermes.config.impl.runtime.XMLSerializable, hermes.config.impl.runtime.ValidatableObject
{

    protected hermes.config.ProviderExtConfig _Extension;
    protected java.lang.String _ClasspathId;
    protected com.sun.xml.bind.util.ListImpl _Connection;
    protected hermes.config.ProviderConfig _Provider;
    protected com.sun.xml.bind.util.ListImpl _Destination;
    public final static java.lang.Class version = (hermes.config.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (hermes.config.FactoryConfig.class);
    }

    public hermes.config.ProviderExtConfig getExtension() {
        return _Extension;
    }

    public void setExtension(hermes.config.ProviderExtConfig value) {
        _Extension = value;
    }

    public java.lang.String getClasspathId() {
        return _ClasspathId;
    }

    public void setClasspathId(java.lang.String value) {
        _ClasspathId = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getConnection() {
        if (_Connection == null) {
            _Connection = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Connection;
    }

    public java.util.List getConnection() {
        return _getConnection();
    }

    public hermes.config.ProviderConfig getProvider() {
        return _Provider;
    }

    public void setProvider(hermes.config.ProviderConfig value) {
        _Provider = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getDestination() {
        if (_Destination == null) {
            _Destination = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Destination;
    }

    public java.util.List getDestination() {
        return _getDestination();
    }

    public hermes.config.impl.runtime.UnmarshallingEventHandler createUnmarshaller(hermes.config.impl.runtime.UnmarshallingContext context) {
        return new hermes.config.impl.FactoryConfigImpl.Unmarshaller(context);
    }

    public void serializeBody(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_Connection == null)? 0 :_Connection.size());
        int idx5 = 0;
        final int len5 = ((_Destination == null)? 0 :_Destination.size());
        context.startElement("", "provider");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Provider), "Provider");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Provider), "Provider");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Provider), "Provider");
        context.endElement();
        while (idx3 != len3) {
            context.startElement("", "connection");
            int idx_2 = idx3;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Connection.get(idx_2 ++)), "Connection");
            context.endNamespaceDecls();
            int idx_3 = idx3;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Connection.get(idx_3 ++)), "Connection");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Connection.get(idx3 ++)), "Connection");
            context.endElement();
        }
        while (idx5 != len5) {
            context.startElement("", "destination");
            int idx_4 = idx5;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Destination.get(idx_4 ++)), "Destination");
            context.endNamespaceDecls();
            int idx_5 = idx5;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Destination.get(idx_5 ++)), "Destination");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Destination.get(idx5 ++)), "Destination");
            context.endElement();
        }
        if (_Extension!= null) {
            context.startElement("", "extension");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Extension), "Extension");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Extension), "Extension");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Extension), "Extension");
            context.endElement();
        }
    }

    public void serializeAttributes(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_Connection == null)? 0 :_Connection.size());
        int idx5 = 0;
        final int len5 = ((_Destination == null)? 0 :_Destination.size());
        if (_ClasspathId!= null) {
            context.startAttribute("", "classpathId");
            try {
                context.text(((java.lang.String) _ClasspathId), "ClasspathId");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx3 != len3) {
            idx3 += 1;
        }
        while (idx5 != len5) {
            idx5 += 1;
        }
    }

    public void serializeURIs(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_Connection == null)? 0 :_Connection.size());
        int idx5 = 0;
        final int len5 = ((_Destination == null)? 0 :_Destination.size());
        while (idx3 != len3) {
            idx3 += 1;
        }
        while (idx5 != len5) {
            idx5 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (hermes.config.FactoryConfig.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv."
+"grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq"
+"\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\tpp\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000"
+"~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.m"
+"sv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~"
+"\u0000\nxq\u0000~\u0000\u0003q\u0000~\u0000\u0015psr\u00002com.sun.msv.grammar.Expression$AnyStringEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0014\u0001psr\u0000 com.sun.msv.grammar.Any"
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001apsr\u0000#com.sun.msv.grammar.SimpleNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq"
+"\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000\u001chermes.config.ProviderConfigt\u0000+http://java.sun."
+"com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000fppsq\u0000~\u0000\u0016q\u0000~\u0000\u0015psr\u0000\u001bcom.sun.m"
+"sv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/D"
+"atatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair"
+";xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%c"
+"om.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.m"
+"sv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000"
+"!L\u0000\btypeNameq\u0000~\u0000!L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/W"
+"hiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005Q"
+"Namesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collaps"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpre"
+"ssion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB"
+"\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000"
+" t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000"
+"~\u0000 t\u0000\bprovidert\u0000\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u000fpps"
+"q\u0000~\u0000\u0011q\u0000~\u0000\u0015psq\u0000~\u0000\u0016q\u0000~\u0000\u0015pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u001ehermes.config"
+".ConnectionConfigq\u0000~\u0000$sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0016q\u0000~\u0000\u0015pq\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000\u001fsq\u0000"
+"~\u0000 t\u0000\nconnectionq\u0000~\u0000?sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0015psq\u0000~\u0000\tq\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000"
+"ppsq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0015psq\u0000~\u0000\u0016q\u0000~\u0000\u0015pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq"
+"\u0000~\u0000 t\u0000\u001fhermes.config.DestinationConfigq\u0000~\u0000$sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u0015pq\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u000bdestinationq\u0000~\u0000?q\u0000~\u0000\u001fsq\u0000~\u0000\u000fppsq\u0000~"
+"\u0000\tq\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0015psq\u0000~\u0000\u0016q\u0000~\u0000\u0015pq\u0000"
+"~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u001fhermes.config.ProviderExtConfigq\u0000~\u0000$sq"
+"\u0000~\u0000\u000fppsq\u0000~\u0000\u0016q\u0000~\u0000\u0015pq\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\textensionq\u0000~\u0000?q\u0000~\u0000"
+"\u001fsq\u0000~\u0000\u000fppsq\u0000~\u0000\u0016q\u0000~\u0000\u0015psq\u0000~\u0000\'ppsr\u0000#com.sun.msv.datatype.xsd.St"
+"ringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000,q\u0000~\u00001t\u0000\u0006stringsr\u00005c"
+"om.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u00004\u0001q\u0000~\u00007sq\u0000~\u00008q\u0000~\u0000mq\u0000~\u00001sq\u0000~\u0000 t\u0000\u000bclasspathIdq\u0000~\u0000?q\u0000~\u0000"
+"\u001fsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTabl"
+"et\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com"
+".sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005coun"
+"tB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expression"
+"Pool;xp\u0000\u0000\u0000\u0019\u0001pq\u0000~\u0000hq\u0000~\u0000\u0013q\u0000~\u0000Eq\u0000~\u0000Sq\u0000~\u0000`q\u0000~\u0000\bq\u0000~\u0000Mq\u0000~\u0000@q\u0000~\u0000Nq\u0000"
+"~\u0000\u0005q\u0000~\u0000\u0006q\u0000~\u0000%q\u0000~\u0000Iq\u0000~\u0000Wq\u0000~\u0000dq\u0000~\u0000[q\u0000~\u0000\u0007q\u0000~\u0000\u0010q\u0000~\u0000Dq\u0000~\u0000Rq\u0000~\u0000_q\u0000"
+"~\u0000\rq\u0000~\u0000Bq\u0000~\u0000Pq\u0000~\u0000]x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends hermes.config.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(hermes.config.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------");
        }

        protected Unmarshaller(hermes.config.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return hermes.config.impl.FactoryConfigImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  13 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("properties" == ___local)&&("" == ___uri)) {
                            _Extension = ((hermes.config.impl.ProviderExtConfigImpl) spawnChildFromEnterElement((hermes.config.impl.ProviderExtConfigImpl.class), 14, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  3 :
                        if (("provider" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "trace");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("properties" == ___local)&&("" == ___uri)) {
                            _Provider = ((hermes.config.impl.ProviderConfigImpl) spawnChildFromEnterElement((hermes.config.impl.ProviderConfigImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Provider = ((hermes.config.impl.ProviderConfigImpl) spawnChildFromEnterElement((hermes.config.impl.ProviderConfigImpl.class), 5, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  15 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  9 :
                        if (("connection" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        if (("destination" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "clientID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "connectionPerThread");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "password");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "username");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("session" == ___local)&&("" == ___uri)) {
                            _getConnection().add(((hermes.config.impl.ConnectionConfigImpl) spawnChildFromEnterElement((hermes.config.impl.ConnectionConfigImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getConnection().add(((hermes.config.impl.ConnectionConfigImpl) spawnChildFromEnterElement((hermes.config.impl.ConnectionConfigImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  12 :
                        if (("destination" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        if (("extension" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  6 :
                        if (("connection" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "classpathId");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "clientID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "domain");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "durable");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "myHermes");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "selector");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "shortName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "unsubscribeOnClose");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "useLocalRenderer");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("properties" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterElement((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("renderer" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterElement((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterElement((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ClasspathId = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        if (("connection" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  5 :
                        if (("provider" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "trace");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Provider = ((hermes.config.impl.ProviderConfigImpl) spawnChildFromLeaveElement((hermes.config.impl.ProviderConfigImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  15 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "clientID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "connectionPerThread");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "password");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "username");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getConnection().add(((hermes.config.impl.ConnectionConfigImpl) spawnChildFromLeaveElement((hermes.config.impl.ConnectionConfigImpl.class), 8, ___uri, ___local, ___qname)));
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "classpathId");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  11 :
                        if (("destination" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "clientID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "domain");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "durable");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "myHermes");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "selector");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "shortName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "unsubscribeOnClose");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "useLocalRenderer");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromLeaveElement((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname)));
                        return ;
                    case  14 :
                        if (("extension" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  13 :
                        if (("className" == ___local)&&("" == ___uri)) {
                            _Extension = ((hermes.config.impl.ProviderExtConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ProviderExtConfigImpl.class), 14, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  4 :
                        if (("className" == ___local)&&("" == ___uri)) {
                            _Provider = ((hermes.config.impl.ProviderConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ProviderConfigImpl.class), 5, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("trace" == ___local)&&("" == ___uri)) {
                            _Provider = ((hermes.config.impl.ProviderConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ProviderConfigImpl.class), 5, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Provider = ((hermes.config.impl.ProviderConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ProviderConfigImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  15 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  7 :
                        if (("clientID" == ___local)&&("" == ___uri)) {
                            _getConnection().add(((hermes.config.impl.ConnectionConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ConnectionConfigImpl.class), 8, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("connectionPerThread" == ___local)&&("" == ___uri)) {
                            _getConnection().add(((hermes.config.impl.ConnectionConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ConnectionConfigImpl.class), 8, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("password" == ___local)&&("" == ___uri)) {
                            _getConnection().add(((hermes.config.impl.ConnectionConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ConnectionConfigImpl.class), 8, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("username" == ___local)&&("" == ___uri)) {
                            _getConnection().add(((hermes.config.impl.ConnectionConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ConnectionConfigImpl.class), 8, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getConnection().add(((hermes.config.impl.ConnectionConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ConnectionConfigImpl.class), 8, ___uri, ___local, ___qname)));
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  0 :
                        if (("classpathId" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  10 :
                        if (("className" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("clientID" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("domain" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("durable" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("myHermes" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("name" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("selector" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("shortName" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("unsubscribeOnClose" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("useLocalRenderer" == ___local)&&("" == ___uri)) {
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname)));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  13 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "trace");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Provider = ((hermes.config.impl.ProviderConfigImpl) spawnChildFromLeaveAttribute((hermes.config.impl.ProviderConfigImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  15 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "clientID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "connectionPerThread");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "password");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "username");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getConnection().add(((hermes.config.impl.ConnectionConfigImpl) spawnChildFromLeaveAttribute((hermes.config.impl.ConnectionConfigImpl.class), 8, ___uri, ___local, ___qname)));
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  2 :
                        if (("classpathId" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "classpathId");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "clientID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "domain");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "durable");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "myHermes");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "selector");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "shortName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "unsubscribeOnClose");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "useLocalRenderer");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromLeaveAttribute((hermes.config.impl.DestinationConfigImpl.class), 11, ___uri, ___local, ___qname)));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  13 :
                            attIdx = context.getAttribute("", "className");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  4 :
                            attIdx = context.getAttribute("", "className");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "trace");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Provider = ((hermes.config.impl.ProviderConfigImpl) spawnChildFromText((hermes.config.impl.ProviderConfigImpl.class), 5, value));
                            return ;
                        case  15 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "clientID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "connectionPerThread");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "password");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "username");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getConnection().add(((hermes.config.impl.ConnectionConfigImpl) spawnChildFromText((hermes.config.impl.ConnectionConfigImpl.class), 8, value)));
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "classpathId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  10 :
                            attIdx = context.getAttribute("", "className");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "clientID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "domain");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "durable");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "myHermes");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "selector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "shortName");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "unsubscribeOnClose");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "useLocalRenderer");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getDestination().add(((hermes.config.impl.DestinationConfigImpl) spawnChildFromText((hermes.config.impl.DestinationConfigImpl.class), 11, value)));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
