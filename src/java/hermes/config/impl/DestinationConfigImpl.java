//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.01.03 at 11:55:46 GMT 
//


package hermes.config.impl;

public class DestinationConfigImpl implements hermes.config.DestinationConfig, com.sun.xml.bind.JAXBObject, hermes.config.impl.runtime.UnmarshallableObject, hermes.config.impl.runtime.XMLSerializable, hermes.config.impl.runtime.ValidatableObject
{

    protected boolean has_Domain;
    protected int _Domain;
    protected java.lang.String _Password;
    protected java.lang.String _ClientID;
    protected java.lang.String _MyHermes;
    protected hermes.config.PropertySetConfig _Properties;
    protected java.lang.String _Name;
    protected hermes.config.RendererConfig _Renderer;
    protected boolean has_UnsubscribeOnClose;
    protected boolean _UnsubscribeOnClose;
    protected boolean has_UseLocalRenderer;
    protected boolean _UseLocalRenderer;
    protected boolean has_Durable;
    protected boolean _Durable;
    protected java.lang.String _ShortName;
    protected java.lang.String _Username;
    protected java.lang.String _Selector;
    protected java.lang.String _ClassName;
    public final static java.lang.Class version = (hermes.config.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (hermes.config.DestinationConfig.class);
    }

    public int getDomain() {
        return _Domain;
    }

    public void setDomain(int value) {
        _Domain = value;
        has_Domain = true;
    }

    public java.lang.String getPassword() {
        return _Password;
    }

    public void setPassword(java.lang.String value) {
        _Password = value;
    }

    public java.lang.String getClientID() {
        return _ClientID;
    }

    public void setClientID(java.lang.String value) {
        _ClientID = value;
    }

    public java.lang.String getMyHermes() {
        return _MyHermes;
    }

    public void setMyHermes(java.lang.String value) {
        _MyHermes = value;
    }

    public hermes.config.PropertySetConfig getProperties() {
        return _Properties;
    }

    public void setProperties(hermes.config.PropertySetConfig value) {
        _Properties = value;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public hermes.config.RendererConfig getRenderer() {
        return _Renderer;
    }

    public void setRenderer(hermes.config.RendererConfig value) {
        _Renderer = value;
    }

    public boolean isUnsubscribeOnClose() {
        return _UnsubscribeOnClose;
    }

    public void setUnsubscribeOnClose(boolean value) {
        _UnsubscribeOnClose = value;
        has_UnsubscribeOnClose = true;
    }

    public boolean isUseLocalRenderer() {
        return _UseLocalRenderer;
    }

    public void setUseLocalRenderer(boolean value) {
        _UseLocalRenderer = value;
        has_UseLocalRenderer = true;
    }

    public boolean isDurable() {
        return _Durable;
    }

    public void setDurable(boolean value) {
        _Durable = value;
        has_Durable = true;
    }

    public java.lang.String getShortName() {
        return _ShortName;
    }

    public void setShortName(java.lang.String value) {
        _ShortName = value;
    }

    public java.lang.String getUsername() {
        return _Username;
    }

    public void setUsername(java.lang.String value) {
        _Username = value;
    }

    public java.lang.String getSelector() {
        return _Selector;
    }

    public void setSelector(java.lang.String value) {
        _Selector = value;
    }

    public java.lang.String getClassName() {
        return _ClassName;
    }

    public void setClassName(java.lang.String value) {
        _ClassName = value;
    }

    public hermes.config.impl.runtime.UnmarshallingEventHandler createUnmarshaller(hermes.config.impl.runtime.UnmarshallingContext context) {
        return new hermes.config.impl.DestinationConfigImpl.Unmarshaller(context);
    }

    public void serializeBody(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Properties!= null) {
            context.startElement("", "properties");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Properties), "Properties");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Properties), "Properties");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Properties), "Properties");
            context.endElement();
        }
        if (_Renderer!= null) {
            context.startElement("", "renderer");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Renderer), "Renderer");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Renderer), "Renderer");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Renderer), "Renderer");
            context.endElement();
        }
    }

    public void serializeAttributes(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_ClassName!= null) {
            context.startAttribute("", "className");
            try {
                context.text(((java.lang.String) _ClassName), "ClassName");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_ClientID!= null) {
            context.startAttribute("", "clientID");
            try {
                context.text(((java.lang.String) _ClientID), "ClientID");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_Domain) {
            context.startAttribute("", "domain");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Domain)), "Domain");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_Durable) {
            context.startAttribute("", "durable");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Durable)), "Durable");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_MyHermes!= null) {
            context.startAttribute("", "myHermes");
            try {
                context.text(((java.lang.String) _MyHermes), "MyHermes");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Name!= null) {
            context.startAttribute("", "name");
            try {
                context.text(((java.lang.String) _Name), "Name");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Password!= null) {
            context.startAttribute("", "password");
            try {
                context.text(((java.lang.String) _Password), "Password");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Selector!= null) {
            context.startAttribute("", "selector");
            try {
                context.text(((java.lang.String) _Selector), "Selector");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_ShortName!= null) {
            context.startAttribute("", "shortName");
            try {
                context.text(((java.lang.String) _ShortName), "ShortName");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_UnsubscribeOnClose) {
            context.startAttribute("", "unsubscribeOnClose");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _UnsubscribeOnClose)), "UnsubscribeOnClose");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_UseLocalRenderer) {
            context.startAttribute("", "useLocalRenderer");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _UseLocalRenderer)), "UseLocalRenderer");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Username!= null) {
            context.startAttribute("", "username");
            try {
                context.text(((java.lang.String) _Username), "Username");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeURIs(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (hermes.config.DestinationConfig.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001d"
+"com.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun."
+"msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLco"
+"m/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~"
+"\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000\u0014pp\u0000sq\u0000~\u0000\u0012ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003q\u0000~\u0000\u0019psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000"
+"\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0015xq\u0000~\u0000\u0003q\u0000~\u0000\u0019psr\u00002com.sun.msv.gramma"
+"r.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0018\u0001psr\u0000"
+" com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv."
+"grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000$psr\u0000#com.sun.msv"
+".grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang"
+"/String;L\u0000\fnamespaceURIq\u0000~\u0000+xq\u0000~\u0000&t\u0000\u001fhermes.config.PropertyS"
+"etConfigt\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0012"
+"ppsq\u0000~\u0000 q\u0000~\u0000\u0019psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002d"
+"tt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dL"
+"com/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype"
+".xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Builti"
+"nAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000+L\u0000\btypeNameq\u0000~\u0000+L\u0000\nwhiteSpacet\u0000."
+"Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://ww"
+"w.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datat"
+"ype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gram"
+"mar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.s"
+"un.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000+L\u0000\fnamespa"
+"ceURIq\u0000~\u0000+xpq\u0000~\u0000<q\u0000~\u0000;sq\u0000~\u0000*t\u0000\u0004typet\u0000)http://www.w3.org/2001"
+"/XMLSchema-instanceq\u0000~\u0000)sq\u0000~\u0000*t\u0000\npropertiest\u0000\u0000q\u0000~\u0000)sq\u0000~\u0000\u0012pps"
+"q\u0000~\u0000\u0014q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0019psq\u0000~\u0000 q\u0000~\u0000\u0019"
+"pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u0000\u001chermes.config.RendererConfigq\u0000~\u0000.sq"
+"\u0000~\u0000\u0012ppsq\u0000~\u0000 q\u0000~\u0000\u0019pq\u0000~\u00004q\u0000~\u0000Dq\u0000~\u0000)sq\u0000~\u0000*t\u0000\brendererq\u0000~\u0000Iq\u0000~\u0000)"
+"sq\u0000~\u0000\u0012ppsq\u0000~\u0000 q\u0000~\u0000\u0019psq\u0000~\u00001ppsr\u0000#com.sun.msv.datatype.xsd.Str"
+"ingType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00006q\u0000~\u0000;t\u0000\u0006stringsr\u00005co"
+"m.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000>\u0001q\u0000~\u0000Asq\u0000~\u0000Bq\u0000~\u0000\\q\u0000~\u0000;sq\u0000~\u0000*t\u0000\tclassNameq\u0000~\u0000Iq\u0000~\u0000)sq"
+"\u0000~\u0000\u0012ppsq\u0000~\u0000 q\u0000~\u0000\u0019pq\u0000~\u0000Ysq\u0000~\u0000*t\u0000\bclientIDq\u0000~\u0000Iq\u0000~\u0000)sq\u0000~\u0000\u0012ppsq"
+"\u0000~\u0000 q\u0000~\u0000\u0019psq\u0000~\u00001ppsr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be"
+"\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;"
+"xq\u0000~\u00006q\u0000~\u0000;t\u0000\u0003intq\u0000~\u0000?sr\u0000*com.sun.msv.datatype.xsd.MaxInclus"
+"iveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.d"
+"atatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*c"
+"om.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFac"
+"etFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000kL\u0000\fconcreteTypet"
+"\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000+xq"
+"\u0000~\u00008ppq\u0000~\u0000?\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000oppq\u0000~\u0000?\u0000\u0000sr\u0000!com.sun.msv.datatype.xsd.LongTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000jq\u0000~\u0000;t\u0000\u0004longq\u0000~\u0000?sq\u0000~\u0000nppq\u0000~\u0000?\u0000\u0001sq\u0000~\u0000uppq"
+"\u0000~\u0000?\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000jq\u0000~\u0000;t\u0000\u0007integerq\u0000~\u0000?sr\u0000,com.sun.msv.datatype.xsd.Fraction"
+"DigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.D"
+"ataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000rppq\u0000~\u0000?\u0001\u0000s"
+"r\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00006q\u0000~\u0000;"
+"t\u0000\u0007decimalq\u0000~\u0000?q\u0000~\u0000\u0083t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000}t\u0000\fminInclusiv"
+"esr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac"
+"\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000}t\u0000\fmaxInclusivesq\u0000~\u0000\u0087\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000xq\u0000"
+"~\u0000\u0086sr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000\u0088\u0080\u0000\u0000\u0000q\u0000~\u0000xq\u0000"
+"~\u0000\u008asq\u0000~\u0000\u008c\u007f\u00ff\u00ff\u00ffq\u0000~\u0000Asq\u0000~\u0000Bq\u0000~\u0000mq\u0000~\u0000;sq\u0000~\u0000*t\u0000\u0006domainq\u0000~\u0000Iq\u0000~\u0000)s"
+"q\u0000~\u0000\u0012ppsq\u0000~\u0000 q\u0000~\u0000\u0019psq\u0000~\u00001ppsr\u0000$com.sun.msv.datatype.xsd.Bool"
+"eanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00006q\u0000~\u0000;t\u0000\u0007booleanq\u0000~\u0000?q\u0000~\u0000Asq\u0000~\u0000Bq\u0000~\u0000\u0097"
+"q\u0000~\u0000;sq\u0000~\u0000*t\u0000\u0007durableq\u0000~\u0000Iq\u0000~\u0000)sq\u0000~\u0000\u0012ppsq\u0000~\u0000 q\u0000~\u0000\u0019pq\u0000~\u0000Ysq\u0000~"
+"\u0000*t\u0000\bmyHermesq\u0000~\u0000Iq\u0000~\u0000)sq\u0000~\u0000\u0012ppsq\u0000~\u0000 q\u0000~\u0000\u0019pq\u0000~\u0000Ysq\u0000~\u0000*t\u0000\u0004nam"
+"eq\u0000~\u0000Iq\u0000~\u0000)sq\u0000~\u0000\u0012ppsq\u0000~\u0000 q\u0000~\u0000\u0019pq\u0000~\u0000Ysq\u0000~\u0000*t\u0000\bpasswordq\u0000~\u0000Iq\u0000"
+"~\u0000)sq\u0000~\u0000\u0012ppsq\u0000~\u0000 q\u0000~\u0000\u0019pq\u0000~\u0000Ysq\u0000~\u0000*t\u0000\bselectorq\u0000~\u0000Iq\u0000~\u0000)sq\u0000~\u0000"
+"\u0012ppsq\u0000~\u0000 q\u0000~\u0000\u0019pq\u0000~\u0000Ysq\u0000~\u0000*t\u0000\tshortNameq\u0000~\u0000Iq\u0000~\u0000)sq\u0000~\u0000\u0012ppsq\u0000~"
+"\u0000 q\u0000~\u0000\u0019pq\u0000~\u0000\u0094sq\u0000~\u0000*t\u0000\u0012unsubscribeOnCloseq\u0000~\u0000Iq\u0000~\u0000)sq\u0000~\u0000\u0012ppsq"
+"\u0000~\u0000 q\u0000~\u0000\u0019pq\u0000~\u0000\u0094sq\u0000~\u0000*t\u0000\u0010useLocalRendererq\u0000~\u0000Iq\u0000~\u0000)sq\u0000~\u0000\u0012ppsq"
+"\u0000~\u0000 q\u0000~\u0000\u0019pq\u0000~\u0000Ysq\u0000~\u0000*t\u0000\busernameq\u0000~\u0000Iq\u0000~\u0000)sr\u0000\"com.sun.msv.gr"
+"ammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gr"
+"ammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Ex"
+"pressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000"
+"\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000#\u0001pq\u0000~\u0000\u0006q"
+"\u0000~\u0000\u00b7q\u0000~\u0000\u00a3q\u0000~\u0000\tq\u0000~\u0000bq\u0000~\u0000\u001aq\u0000~\u0000Lq\u0000~\u0000\u0013q\u0000~\u0000Jq\u0000~\u0000\u001cq\u0000~\u0000Nq\u0000~\u0000\u00a7q\u0000~\u0000Wq"
+"\u0000~\u0000\u00afq\u0000~\u0000\u00b3q\u0000~\u0000\u0092q\u0000~\u0000\u009fq\u0000~\u0000\u009bq\u0000~\u0000\u00abq\u0000~\u0000fq\u0000~\u0000\u000eq\u0000~\u0000\u0005q\u0000~\u0000\rq\u0000~\u0000\fq\u0000~\u0000\u0007q"
+"\u0000~\u0000\u000fq\u0000~\u0000/q\u0000~\u0000Sq\u0000~\u0000\u001fq\u0000~\u0000Oq\u0000~\u0000\u0010q\u0000~\u0000\u000bq\u0000~\u0000\bq\u0000~\u0000\u0011q\u0000~\u0000\nx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends hermes.config.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(hermes.config.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------------------");
        }

        protected Unmarshaller(hermes.config.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return hermes.config.impl.DestinationConfigImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        attIdx = context.getAttribute("", "password");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  24 :
                        attIdx = context.getAttribute("", "shortName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 27;
                            continue outer;
                        }
                        state = 27;
                        continue outer;
                    case  40 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("properties" == ___local)&&("" == ___uri)) {
                            _Renderer = ((hermes.config.impl.RendererConfigImpl) spawnChildFromEnterElement((hermes.config.impl.RendererConfigImpl.class), 41, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Renderer = ((hermes.config.impl.RendererConfigImpl) spawnChildFromEnterElement((hermes.config.impl.RendererConfigImpl.class), 41, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  27 :
                        attIdx = context.getAttribute("", "unsubscribeOnClose");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 30;
                            continue outer;
                        }
                        state = 30;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "domain");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "durable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  37 :
                        if (("property" == ___local)&&("" == ___uri)) {
                            _Properties = ((hermes.config.impl.PropertySetConfigImpl) spawnChildFromEnterElement((hermes.config.impl.PropertySetConfigImpl.class), 38, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Properties = ((hermes.config.impl.PropertySetConfigImpl) spawnChildFromEnterElement((hermes.config.impl.PropertySetConfigImpl.class), 38, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "myHermes");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  30 :
                        attIdx = context.getAttribute("", "useLocalRenderer");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 33;
                            continue outer;
                        }
                        state = 33;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "clientID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  39 :
                        if (("renderer" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  36 :
                        if (("properties" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  42 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  33 :
                        attIdx = context.getAttribute("", "username");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 36;
                            continue outer;
                        }
                        state = 36;
                        continue outer;
                    case  21 :
                        attIdx = context.getAttribute("", "selector");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText12(v);
                            state = 24;
                            continue outer;
                        }
                        state = 24;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Password = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ShortName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _UnsubscribeOnClose = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_UnsubscribeOnClose = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Domain = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Domain = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Durable = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Durable = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MyHermes = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _UseLocalRenderer = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_UseLocalRenderer = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ClientID = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ClassName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Username = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Selector = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        attIdx = context.getAttribute("", "password");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  24 :
                        attIdx = context.getAttribute("", "shortName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 27;
                            continue outer;
                        }
                        state = 27;
                        continue outer;
                    case  40 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Renderer = ((hermes.config.impl.RendererConfigImpl) spawnChildFromLeaveElement((hermes.config.impl.RendererConfigImpl.class), 41, ___uri, ___local, ___qname));
                        return ;
                    case  27 :
                        attIdx = context.getAttribute("", "unsubscribeOnClose");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 30;
                            continue outer;
                        }
                        state = 30;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "domain");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  38 :
                        if (("properties" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "durable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  37 :
                        _Properties = ((hermes.config.impl.PropertySetConfigImpl) spawnChildFromLeaveElement((hermes.config.impl.PropertySetConfigImpl.class), 38, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "myHermes");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  30 :
                        attIdx = context.getAttribute("", "useLocalRenderer");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 33;
                            continue outer;
                        }
                        state = 33;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "clientID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  42 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  33 :
                        attIdx = context.getAttribute("", "username");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 36;
                            continue outer;
                        }
                        state = 36;
                        continue outer;
                    case  21 :
                        attIdx = context.getAttribute("", "selector");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText12(v);
                            state = 24;
                            continue outer;
                        }
                        state = 24;
                        continue outer;
                    case  41 :
                        if (("renderer" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        if (("password" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  24 :
                        if (("shortName" == ___local)&&("" == ___uri)) {
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  40 :
                        if (("className" == ___local)&&("" == ___uri)) {
                            _Renderer = ((hermes.config.impl.RendererConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.RendererConfigImpl.class), 41, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("name" == ___local)&&("" == ___uri)) {
                            _Renderer = ((hermes.config.impl.RendererConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.RendererConfigImpl.class), 41, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Renderer = ((hermes.config.impl.RendererConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.RendererConfigImpl.class), 41, ___uri, ___local, ___qname));
                        return ;
                    case  27 :
                        if (("unsubscribeOnClose" == ___local)&&("" == ___uri)) {
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  6 :
                        if (("domain" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  15 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  9 :
                        if (("durable" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  37 :
                        _Properties = ((hermes.config.impl.PropertySetConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.PropertySetConfigImpl.class), 38, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        if (("myHermes" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  30 :
                        if (("useLocalRenderer" == ___local)&&("" == ___uri)) {
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  3 :
                        if (("clientID" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  42 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("className" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  33 :
                        if (("username" == ___local)&&("" == ___uri)) {
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  21 :
                        if (("selector" == ___local)&&("" == ___uri)) {
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  11 :
                        if (("durable" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  32 :
                        if (("useLocalRenderer" == ___local)&&("" == ___uri)) {
                            state = 33;
                            return ;
                        }
                        break;
                    case  18 :
                        attIdx = context.getAttribute("", "password");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  35 :
                        if (("username" == ___local)&&("" == ___uri)) {
                            state = 36;
                            return ;
                        }
                        break;
                    case  24 :
                        attIdx = context.getAttribute("", "shortName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 27;
                            continue outer;
                        }
                        state = 27;
                        continue outer;
                    case  17 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  40 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Renderer = ((hermes.config.impl.RendererConfigImpl) spawnChildFromLeaveAttribute((hermes.config.impl.RendererConfigImpl.class), 41, ___uri, ___local, ___qname));
                        return ;
                    case  26 :
                        if (("shortName" == ___local)&&("" == ___uri)) {
                            state = 27;
                            return ;
                        }
                        break;
                    case  27 :
                        attIdx = context.getAttribute("", "unsubscribeOnClose");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 30;
                            continue outer;
                        }
                        state = 30;
                        continue outer;
                    case  8 :
                        if (("domain" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("myHermes" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "domain");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "durable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  37 :
                        _Properties = ((hermes.config.impl.PropertySetConfigImpl) spawnChildFromLeaveAttribute((hermes.config.impl.PropertySetConfigImpl.class), 38, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "myHermes");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  30 :
                        attIdx = context.getAttribute("", "useLocalRenderer");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 33;
                            continue outer;
                        }
                        state = 33;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "clientID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  5 :
                        if (("clientID" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("className" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  23 :
                        if (("selector" == ___local)&&("" == ___uri)) {
                            state = 24;
                            return ;
                        }
                        break;
                    case  42 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  33 :
                        attIdx = context.getAttribute("", "username");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 36;
                            continue outer;
                        }
                        state = 36;
                        continue outer;
                    case  20 :
                        if (("password" == ___local)&&("" == ___uri)) {
                            state = 21;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("unsubscribeOnClose" == ___local)&&("" == ___uri)) {
                            state = 30;
                            return ;
                        }
                        break;
                    case  21 :
                        attIdx = context.getAttribute("", "selector");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText12(v);
                            state = 24;
                            continue outer;
                        }
                        state = 24;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  19 :
                            eatText1(value);
                            state = 20;
                            return ;
                        case  4 :
                            eatText9(value);
                            state = 5;
                            return ;
                        case  18 :
                            attIdx = context.getAttribute("", "password");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 21;
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                        case  22 :
                            eatText12(value);
                            state = 23;
                            return ;
                        case  24 :
                            attIdx = context.getAttribute("", "shortName");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 27;
                                continue outer;
                            }
                            state = 27;
                            continue outer;
                        case  25 :
                            eatText2(value);
                            state = 26;
                            return ;
                        case  40 :
                            attIdx = context.getAttribute("", "className");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Renderer = ((hermes.config.impl.RendererConfigImpl) spawnChildFromText((hermes.config.impl.RendererConfigImpl.class), 41, value));
                            return ;
                        case  27 :
                            attIdx = context.getAttribute("", "unsubscribeOnClose");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 30;
                                continue outer;
                            }
                            state = 30;
                            continue outer;
                        case  7 :
                            eatText4(value);
                            state = 8;
                            return ;
                        case  28 :
                            eatText3(value);
                            state = 29;
                            return ;
                        case  34 :
                            eatText11(value);
                            state = 35;
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "domain");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  15 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 18;
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "durable");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 12;
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  37 :
                            _Properties = ((hermes.config.impl.PropertySetConfigImpl) spawnChildFromText((hermes.config.impl.PropertySetConfigImpl.class), 38, value));
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "myHermes");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 15;
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  30 :
                            attIdx = context.getAttribute("", "useLocalRenderer");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText8(v);
                                state = 33;
                                continue outer;
                            }
                            state = 33;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "clientID");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText9(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  1 :
                            eatText10(value);
                            state = 2;
                            return ;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  10 :
                            eatText6(value);
                            state = 11;
                            return ;
                        case  16 :
                            eatText5(value);
                            state = 17;
                            return ;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  42 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "className");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText10(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  33 :
                            attIdx = context.getAttribute("", "username");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText11(v);
                                state = 36;
                                continue outer;
                            }
                            state = 36;
                            continue outer;
                        case  13 :
                            eatText7(value);
                            state = 14;
                            return ;
                        case  21 :
                            attIdx = context.getAttribute("", "selector");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText12(v);
                                state = 24;
                                continue outer;
                            }
                            state = 24;
                            continue outer;
                        case  31 :
                            eatText8(value);
                            state = 32;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
