//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.12.06 at 11:32:15 GMT 
//


package hermes.config.impl;

public class HermesConfigImpl implements hermes.config.HermesConfig, com.sun.xml.bind.JAXBObject, hermes.config.impl.runtime.UnmarshallableObject, hermes.config.impl.runtime.XMLSerializable, hermes.config.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Loader;
    protected boolean has_CopyJMSPriority;
    protected boolean _CopyJMSPriority;
    protected boolean has_MaxThreadPoolSize;
    protected int _MaxThreadPoolSize;
    protected java.lang.String _AuditDirectory;
    protected boolean has_ScrollMessagesDuringBrowse;
    protected boolean _ScrollMessagesDuringBrowse;
    protected boolean has_DisplayFactoryAdmin;
    protected boolean _DisplayFactoryAdmin;
    protected com.sun.xml.bind.util.ListImpl _Renderer;
    protected boolean has_CorrectDropSemantics;
    protected boolean _CorrectDropSemantics;
    protected boolean has_AutoBrowseRefreshRate;
    protected int _AutoBrowseRefreshRate;
    protected com.sun.xml.bind.util.ListImpl _Watch;
    protected java.lang.String _MessageStoreSession;
    protected com.sun.xml.bind.util.ListImpl _Remote;
    protected java.lang.String _SelectorImpl;
    protected java.lang.String _MessageFilesDir;
    protected boolean has_CopyJMSCorrelationID;
    protected boolean _CopyJMSCorrelationID;
    protected boolean has_CopyJMSExpiration;
    protected boolean _CopyJMSExpiration;
    protected boolean has_MaxColumnsInStatisticsTable;
    protected int _MaxColumnsInStatisticsTable;
    protected boolean has_Version;
    protected int _Version;
    protected boolean has_QueueBrowseConsumerTimeout;
    protected long _QueueBrowseConsumerTimeout;
    protected boolean has_MaxMessagesInBrowserPane;
    protected int _MaxMessagesInBrowserPane;
    protected boolean has_EmbeddedMessageInBrowsePane;
    protected boolean _EmbeddedMessageInBrowsePane;
    protected boolean has_DeliveryModePersistent;
    protected boolean _DeliveryModePersistent;
    protected java.lang.String _LastEditedByUser;
    protected hermes.config.QuickFIXConfig _QuickFIX;
    protected java.lang.String _LookAndFeel;
    protected com.sun.xml.bind.util.ListImpl _Factory;
    protected com.sun.xml.bind.util.ListImpl _ClasspathGroup;
    protected java.lang.String _DisplayName;
    protected com.sun.xml.bind.util.ListImpl _Filters;
    protected boolean has_CopyJMSProviderProperties;
    protected boolean _CopyJMSProviderProperties;
    protected boolean has_EnableJython;
    protected boolean _EnableJython;
    protected boolean has_CopyJMSType;
    protected boolean _CopyJMSType;
    protected java.lang.String _LastEditedByHermesVersion;
    protected com.sun.xml.bind.util.ListImpl _Naming;
    protected com.sun.xml.bind.util.ListImpl _JdbcStore;
    protected boolean has_CopyJMSReplyTo;
    protected boolean _CopyJMSReplyTo;
    protected boolean has_Base64EncodeMessages;
    protected boolean _Base64EncodeMessages;
    public final static java.lang.Class version = (hermes.config.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (hermes.config.HermesConfig.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getLoader() {
        if (_Loader == null) {
            _Loader = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Loader;
    }

    public java.util.List getLoader() {
        return _getLoader();
    }

    public boolean isCopyJMSPriority() {
        return _CopyJMSPriority;
    }

    public void setCopyJMSPriority(boolean value) {
        _CopyJMSPriority = value;
        has_CopyJMSPriority = true;
    }

    public int getMaxThreadPoolSize() {
        return _MaxThreadPoolSize;
    }

    public void setMaxThreadPoolSize(int value) {
        _MaxThreadPoolSize = value;
        has_MaxThreadPoolSize = true;
    }

    public java.lang.String getAuditDirectory() {
        return _AuditDirectory;
    }

    public void setAuditDirectory(java.lang.String value) {
        _AuditDirectory = value;
    }

    public boolean isScrollMessagesDuringBrowse() {
        if (!has_ScrollMessagesDuringBrowse) {
            return javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("true"));
        } else {
            return _ScrollMessagesDuringBrowse;
        }
    }

    public void setScrollMessagesDuringBrowse(boolean value) {
        _ScrollMessagesDuringBrowse = value;
        has_ScrollMessagesDuringBrowse = true;
    }

    public boolean isDisplayFactoryAdmin() {
        return _DisplayFactoryAdmin;
    }

    public void setDisplayFactoryAdmin(boolean value) {
        _DisplayFactoryAdmin = value;
        has_DisplayFactoryAdmin = true;
    }

    protected com.sun.xml.bind.util.ListImpl _getRenderer() {
        if (_Renderer == null) {
            _Renderer = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Renderer;
    }

    public java.util.List getRenderer() {
        return _getRenderer();
    }

    public boolean isCorrectDropSemantics() {
        return _CorrectDropSemantics;
    }

    public void setCorrectDropSemantics(boolean value) {
        _CorrectDropSemantics = value;
        has_CorrectDropSemantics = true;
    }

    public int getAutoBrowseRefreshRate() {
        return _AutoBrowseRefreshRate;
    }

    public void setAutoBrowseRefreshRate(int value) {
        _AutoBrowseRefreshRate = value;
        has_AutoBrowseRefreshRate = true;
    }

    protected com.sun.xml.bind.util.ListImpl _getWatch() {
        if (_Watch == null) {
            _Watch = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Watch;
    }

    public java.util.List getWatch() {
        return _getWatch();
    }

    public java.lang.String getMessageStoreSession() {
        return _MessageStoreSession;
    }

    public void setMessageStoreSession(java.lang.String value) {
        _MessageStoreSession = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getRemote() {
        if (_Remote == null) {
            _Remote = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Remote;
    }

    public java.util.List getRemote() {
        return _getRemote();
    }

    public java.lang.String getSelectorImpl() {
        return _SelectorImpl;
    }

    public void setSelectorImpl(java.lang.String value) {
        _SelectorImpl = value;
    }

    public java.lang.String getMessageFilesDir() {
        return _MessageFilesDir;
    }

    public void setMessageFilesDir(java.lang.String value) {
        _MessageFilesDir = value;
    }

    public boolean isCopyJMSCorrelationID() {
        return _CopyJMSCorrelationID;
    }

    public void setCopyJMSCorrelationID(boolean value) {
        _CopyJMSCorrelationID = value;
        has_CopyJMSCorrelationID = true;
    }

    public boolean isCopyJMSExpiration() {
        return _CopyJMSExpiration;
    }

    public void setCopyJMSExpiration(boolean value) {
        _CopyJMSExpiration = value;
        has_CopyJMSExpiration = true;
    }

    public int getMaxColumnsInStatisticsTable() {
        return _MaxColumnsInStatisticsTable;
    }

    public void setMaxColumnsInStatisticsTable(int value) {
        _MaxColumnsInStatisticsTable = value;
        has_MaxColumnsInStatisticsTable = true;
    }

    public int getVersion() {
        return _Version;
    }

    public void setVersion(int value) {
        _Version = value;
        has_Version = true;
    }

    public long getQueueBrowseConsumerTimeout() {
        return _QueueBrowseConsumerTimeout;
    }

    public void setQueueBrowseConsumerTimeout(long value) {
        _QueueBrowseConsumerTimeout = value;
        has_QueueBrowseConsumerTimeout = true;
    }

    public int getMaxMessagesInBrowserPane() {
        return _MaxMessagesInBrowserPane;
    }

    public void setMaxMessagesInBrowserPane(int value) {
        _MaxMessagesInBrowserPane = value;
        has_MaxMessagesInBrowserPane = true;
    }

    public boolean isEmbeddedMessageInBrowsePane() {
        return _EmbeddedMessageInBrowsePane;
    }

    public void setEmbeddedMessageInBrowsePane(boolean value) {
        _EmbeddedMessageInBrowsePane = value;
        has_EmbeddedMessageInBrowsePane = true;
    }

    public boolean isDeliveryModePersistent() {
        return _DeliveryModePersistent;
    }

    public void setDeliveryModePersistent(boolean value) {
        _DeliveryModePersistent = value;
        has_DeliveryModePersistent = true;
    }

    public java.lang.String getLastEditedByUser() {
        return _LastEditedByUser;
    }

    public void setLastEditedByUser(java.lang.String value) {
        _LastEditedByUser = value;
    }

    public hermes.config.QuickFIXConfig getQuickFIX() {
        return _QuickFIX;
    }

    public void setQuickFIX(hermes.config.QuickFIXConfig value) {
        _QuickFIX = value;
    }

    public java.lang.String getLookAndFeel() {
        return _LookAndFeel;
    }

    public void setLookAndFeel(java.lang.String value) {
        _LookAndFeel = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getFactory() {
        if (_Factory == null) {
            _Factory = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Factory;
    }

    public java.util.List getFactory() {
        return _getFactory();
    }

    protected com.sun.xml.bind.util.ListImpl _getClasspathGroup() {
        if (_ClasspathGroup == null) {
            _ClasspathGroup = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _ClasspathGroup;
    }

    public java.util.List getClasspathGroup() {
        return _getClasspathGroup();
    }

    public java.lang.String getDisplayName() {
        return _DisplayName;
    }

    public void setDisplayName(java.lang.String value) {
        _DisplayName = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getFilters() {
        if (_Filters == null) {
            _Filters = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Filters;
    }

    public java.util.List getFilters() {
        return _getFilters();
    }

    public boolean isCopyJMSProviderProperties() {
        return _CopyJMSProviderProperties;
    }

    public void setCopyJMSProviderProperties(boolean value) {
        _CopyJMSProviderProperties = value;
        has_CopyJMSProviderProperties = true;
    }

    public boolean isEnableJython() {
        if (!has_EnableJython) {
            return javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("true"));
        } else {
            return _EnableJython;
        }
    }

    public void setEnableJython(boolean value) {
        _EnableJython = value;
        has_EnableJython = true;
    }

    public boolean isCopyJMSType() {
        return _CopyJMSType;
    }

    public void setCopyJMSType(boolean value) {
        _CopyJMSType = value;
        has_CopyJMSType = true;
    }

    public java.lang.String getLastEditedByHermesVersion() {
        return _LastEditedByHermesVersion;
    }

    public void setLastEditedByHermesVersion(java.lang.String value) {
        _LastEditedByHermesVersion = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getNaming() {
        if (_Naming == null) {
            _Naming = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Naming;
    }

    public java.util.List getNaming() {
        return _getNaming();
    }

    protected com.sun.xml.bind.util.ListImpl _getJdbcStore() {
        if (_JdbcStore == null) {
            _JdbcStore = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _JdbcStore;
    }

    public java.util.List getJdbcStore() {
        return _getJdbcStore();
    }

    public boolean isCopyJMSReplyTo() {
        return _CopyJMSReplyTo;
    }

    public void setCopyJMSReplyTo(boolean value) {
        _CopyJMSReplyTo = value;
        has_CopyJMSReplyTo = true;
    }

    public boolean isBase64EncodeMessages() {
        return _Base64EncodeMessages;
    }

    public void setBase64EncodeMessages(boolean value) {
        _Base64EncodeMessages = value;
        has_Base64EncodeMessages = true;
    }

    public hermes.config.impl.runtime.UnmarshallingEventHandler createUnmarshaller(hermes.config.impl.runtime.UnmarshallingContext context) {
        return new hermes.config.impl.HermesConfigImpl.Unmarshaller(context);
    }

    public void serializeBody(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Loader == null)? 0 :_Loader.size());
        int idx7 = 0;
        final int len7 = ((_Renderer == null)? 0 :_Renderer.size());
        int idx10 = 0;
        final int len10 = ((_Watch == null)? 0 :_Watch.size());
        int idx12 = 0;
        final int len12 = ((_Remote == null)? 0 :_Remote.size());
        int idx26 = 0;
        final int len26 = ((_Factory == null)? 0 :_Factory.size());
        int idx27 = 0;
        final int len27 = ((_ClasspathGroup == null)? 0 :_ClasspathGroup.size());
        int idx29 = 0;
        final int len29 = ((_Filters == null)? 0 :_Filters.size());
        int idx34 = 0;
        final int len34 = ((_Naming == null)? 0 :_Naming.size());
        int idx35 = 0;
        final int len35 = ((_JdbcStore == null)? 0 :_JdbcStore.size());
        while (idx27 != len27) {
            context.startElement("", "classpathGroup");
            int idx_0 = idx27;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ClasspathGroup.get(idx_0 ++)), "ClasspathGroup");
            context.endNamespaceDecls();
            int idx_1 = idx27;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ClasspathGroup.get(idx_1 ++)), "ClasspathGroup");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ClasspathGroup.get(idx27 ++)), "ClasspathGroup");
            context.endElement();
        }
        while (idx10 != len10) {
            context.startElement("", "watch");
            int idx_2 = idx10;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Watch.get(idx_2 ++)), "Watch");
            context.endNamespaceDecls();
            int idx_3 = idx10;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Watch.get(idx_3 ++)), "Watch");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Watch.get(idx10 ++)), "Watch");
            context.endElement();
        }
        while (idx34 != len34) {
            context.startElement("", "naming");
            int idx_4 = idx34;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Naming.get(idx_4 ++)), "Naming");
            context.endNamespaceDecls();
            int idx_5 = idx34;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Naming.get(idx_5 ++)), "Naming");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Naming.get(idx34 ++)), "Naming");
            context.endElement();
        }
        while (idx7 != len7) {
            context.startElement("", "renderer");
            int idx_6 = idx7;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Renderer.get(idx_6 ++)), "Renderer");
            context.endNamespaceDecls();
            int idx_7 = idx7;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Renderer.get(idx_7 ++)), "Renderer");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Renderer.get(idx7 ++)), "Renderer");
            context.endElement();
        }
        while (idx1 != len1) {
            context.startElement("", "loader");
            int idx_8 = idx1;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Loader.get(idx_8 ++)), "Loader");
            context.endNamespaceDecls();
            int idx_9 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Loader.get(idx_9 ++)), "Loader");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Loader.get(idx1 ++)), "Loader");
            context.endElement();
        }
        while (idx26 != len26) {
            context.startElement("", "factory");
            int idx_10 = idx26;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Factory.get(idx_10 ++)), "Factory");
            context.endNamespaceDecls();
            int idx_11 = idx26;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Factory.get(idx_11 ++)), "Factory");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Factory.get(idx26 ++)), "Factory");
            context.endElement();
        }
        while (idx12 != len12) {
            context.startElement("", "remote");
            int idx_12 = idx12;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Remote.get(idx_12 ++)), "Remote");
            context.endNamespaceDecls();
            int idx_13 = idx12;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Remote.get(idx_13 ++)), "Remote");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Remote.get(idx12 ++)), "Remote");
            context.endElement();
        }
        while (idx35 != len35) {
            context.startElement("", "jdbcStore");
            int idx_14 = idx35;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _JdbcStore.get(idx_14 ++)), "JdbcStore");
            context.endNamespaceDecls();
            int idx_15 = idx35;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _JdbcStore.get(idx_15 ++)), "JdbcStore");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _JdbcStore.get(idx35 ++)), "JdbcStore");
            context.endElement();
        }
        while (idx29 != len29) {
            context.startElement("", "filters");
            int idx_16 = idx29;
            try {
                idx_16 += 1;
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_17 = idx29;
            try {
                idx_17 += 1;
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Filters.get(idx29 ++)), "Filters");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_QuickFIX!= null) {
            context.startElement("", "quickFIX");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _QuickFIX), "QuickFIX");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _QuickFIX), "QuickFIX");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _QuickFIX), "QuickFIX");
            context.endElement();
        }
    }

    public void serializeAttributes(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Loader == null)? 0 :_Loader.size());
        int idx7 = 0;
        final int len7 = ((_Renderer == null)? 0 :_Renderer.size());
        int idx10 = 0;
        final int len10 = ((_Watch == null)? 0 :_Watch.size());
        int idx12 = 0;
        final int len12 = ((_Remote == null)? 0 :_Remote.size());
        int idx26 = 0;
        final int len26 = ((_Factory == null)? 0 :_Factory.size());
        int idx27 = 0;
        final int len27 = ((_ClasspathGroup == null)? 0 :_ClasspathGroup.size());
        int idx29 = 0;
        final int len29 = ((_Filters == null)? 0 :_Filters.size());
        int idx34 = 0;
        final int len34 = ((_Naming == null)? 0 :_Naming.size());
        int idx35 = 0;
        final int len35 = ((_JdbcStore == null)? 0 :_JdbcStore.size());
        if (_AuditDirectory!= null) {
            context.startAttribute("", "auditDirectory");
            try {
                context.text(((java.lang.String) _AuditDirectory), "AuditDirectory");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_AutoBrowseRefreshRate) {
            context.startAttribute("", "autoBrowseRefreshRate");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _AutoBrowseRefreshRate)), "AutoBrowseRefreshRate");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_Base64EncodeMessages) {
            context.startAttribute("", "base64EncodeMessages");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Base64EncodeMessages)), "Base64EncodeMessages");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_CopyJMSCorrelationID) {
            context.startAttribute("", "copyJMSCorrelationID");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CopyJMSCorrelationID)), "CopyJMSCorrelationID");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_CopyJMSExpiration) {
            context.startAttribute("", "copyJMSExpiration");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CopyJMSExpiration)), "CopyJMSExpiration");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_CopyJMSPriority) {
            context.startAttribute("", "copyJMSPriority");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CopyJMSPriority)), "CopyJMSPriority");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_CopyJMSProviderProperties) {
            context.startAttribute("", "copyJMSProviderProperties");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CopyJMSProviderProperties)), "CopyJMSProviderProperties");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_CopyJMSReplyTo) {
            context.startAttribute("", "copyJMSReplyTo");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CopyJMSReplyTo)), "CopyJMSReplyTo");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_CopyJMSType) {
            context.startAttribute("", "copyJMSType");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CopyJMSType)), "CopyJMSType");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_CorrectDropSemantics) {
            context.startAttribute("", "correctDropSemantics");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CorrectDropSemantics)), "CorrectDropSemantics");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_DeliveryModePersistent) {
            context.startAttribute("", "deliveryModePersistent");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _DeliveryModePersistent)), "DeliveryModePersistent");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_DisplayFactoryAdmin) {
            context.startAttribute("", "displayFactoryAdmin");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _DisplayFactoryAdmin)), "DisplayFactoryAdmin");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_DisplayName!= null) {
            context.startAttribute("", "displayName");
            try {
                context.text(((java.lang.String) _DisplayName), "DisplayName");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_EmbeddedMessageInBrowsePane) {
            context.startAttribute("", "embeddedMessageInBrowsePane");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _EmbeddedMessageInBrowsePane)), "EmbeddedMessageInBrowsePane");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_EnableJython) {
            context.startAttribute("", "enableJython");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _EnableJython)), "EnableJython");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_LastEditedByHermesVersion!= null) {
            context.startAttribute("", "lastEditedByHermesVersion");
            try {
                context.text(((java.lang.String) _LastEditedByHermesVersion), "LastEditedByHermesVersion");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_LastEditedByUser!= null) {
            context.startAttribute("", "lastEditedByUser");
            try {
                context.text(((java.lang.String) _LastEditedByUser), "LastEditedByUser");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_LookAndFeel!= null) {
            context.startAttribute("", "lookAndFeel");
            try {
                context.text(((java.lang.String) _LookAndFeel), "LookAndFeel");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_MaxColumnsInStatisticsTable) {
            context.startAttribute("", "maxColumnsInStatisticsTable");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MaxColumnsInStatisticsTable)), "MaxColumnsInStatisticsTable");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_MaxMessagesInBrowserPane) {
            context.startAttribute("", "maxMessagesInBrowserPane");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MaxMessagesInBrowserPane)), "MaxMessagesInBrowserPane");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_MaxThreadPoolSize) {
            context.startAttribute("", "maxThreadPoolSize");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MaxThreadPoolSize)), "MaxThreadPoolSize");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_MessageFilesDir!= null) {
            context.startAttribute("", "messageFilesDir");
            try {
                context.text(((java.lang.String) _MessageFilesDir), "MessageFilesDir");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_MessageStoreSession!= null) {
            context.startAttribute("", "messageStoreSession");
            try {
                context.text(((java.lang.String) _MessageStoreSession), "MessageStoreSession");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_QueueBrowseConsumerTimeout) {
            context.startAttribute("", "queueBrowseConsumerTimeout");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _QueueBrowseConsumerTimeout)), "QueueBrowseConsumerTimeout");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_ScrollMessagesDuringBrowse) {
            context.startAttribute("", "scrollMessagesDuringBrowse");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ScrollMessagesDuringBrowse)), "ScrollMessagesDuringBrowse");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_SelectorImpl!= null) {
            context.startAttribute("", "selectorImpl");
            try {
                context.text(((java.lang.String) _SelectorImpl), "SelectorImpl");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_Version) {
            context.startAttribute("", "version");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Version)), "Version");
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx27 != len27) {
            idx27 += 1;
        }
        while (idx10 != len10) {
            idx10 += 1;
        }
        while (idx34 != len34) {
            idx34 += 1;
        }
        while (idx7 != len7) {
            idx7 += 1;
        }
        while (idx1 != len1) {
            idx1 += 1;
        }
        while (idx26 != len26) {
            idx26 += 1;
        }
        while (idx12 != len12) {
            idx12 += 1;
        }
        while (idx35 != len35) {
            idx35 += 1;
        }
        while (idx29 != len29) {
            try {
                idx29 += 1;
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
    }

    public void serializeURIs(hermes.config.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Loader == null)? 0 :_Loader.size());
        int idx7 = 0;
        final int len7 = ((_Renderer == null)? 0 :_Renderer.size());
        int idx10 = 0;
        final int len10 = ((_Watch == null)? 0 :_Watch.size());
        int idx12 = 0;
        final int len12 = ((_Remote == null)? 0 :_Remote.size());
        int idx26 = 0;
        final int len26 = ((_Factory == null)? 0 :_Factory.size());
        int idx27 = 0;
        final int len27 = ((_ClasspathGroup == null)? 0 :_ClasspathGroup.size());
        int idx29 = 0;
        final int len29 = ((_Filters == null)? 0 :_Filters.size());
        int idx34 = 0;
        final int len34 = ((_Naming == null)? 0 :_Naming.size());
        int idx35 = 0;
        final int len35 = ((_JdbcStore == null)? 0 :_JdbcStore.size());
        while (idx27 != len27) {
            idx27 += 1;
        }
        while (idx10 != len10) {
            idx10 += 1;
        }
        while (idx34 != len34) {
            idx34 += 1;
        }
        while (idx7 != len7) {
            idx7 += 1;
        }
        while (idx1 != len1) {
            idx1 += 1;
        }
        while (idx26 != len26) {
            idx26 += 1;
        }
        while (idx12 != len12) {
            idx12 += 1;
        }
        while (idx35 != len35) {
            idx35 += 1;
        }
        while (idx29 != len29) {
            try {
                idx29 += 1;
            } catch (java.lang.Exception e) {
                hermes.config.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (hermes.config.HermesConfig.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com."
+"sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.gramm"
+"ar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementP"
+"attern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameCla"
+"ss;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUnd"
+"eclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000/p\u0000sq\u0000~\u0000\u0000ppsq"
+"\u0000~\u00000pp\u0000sq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000/psr\u0000 com.sun.msv.grammar.Attribute"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u00001xq\u0000~\u0000\u0003q\u0000~\u0000/psr\u00002co"
+"m.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000\u0003sq\u0000~\u0000.\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000<"
+"psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalN"
+"amet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000Cxq\u0000~\u0000>t\u0000\"hermes."
+"config.ClasspathGroupConfigt\u0000+http://java.sun.com/jaxb/xjc/d"
+"ummy-elementssq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/psr\u0000\u001bcom.sun.msv.grammar.Dat"
+"aExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exc"
+"eptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"c"
+"om.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv."
+"datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dat"
+"atype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xs"
+"d.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000CL\u0000\btypeNameq\u0000"
+"~\u0000CL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProce"
+"ssor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.su"
+"n.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xps"
+"r\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocal"
+"Nameq\u0000~\u0000CL\u0000\fnamespaceURIq\u0000~\u0000Cxpq\u0000~\u0000Tq\u0000~\u0000Ssq\u0000~\u0000Bt\u0000\u0004typet\u0000)htt"
+"p://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000Asq\u0000~\u0000Bt\u0000\u000eclasspat"
+"hGroupt\u0000\u0000q\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000/psq\u0000~\u00000q\u0000~\u0000/p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000"
+"0pp\u0000sq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000/psq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000;q\u0000~\u0000?q\u0000~\u0000Asq\u0000~\u0000Bt\u0000\u0019"
+"hermes.config.WatchConfigq\u0000~\u0000Fsq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000Lq\u0000~\u0000\\"
+"q\u0000~\u0000Asq\u0000~\u0000Bt\u0000\u0005watchq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000/psq\u0000~\u00000q\u0000~\u0000/"
+"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00000pp\u0000sq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000/psq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000;q\u0000~\u0000"
+"?q\u0000~\u0000Asq\u0000~\u0000Bt\u0000\u001ahermes.config.NamingConfigq\u0000~\u0000Fsq\u0000~\u0000)ppsq\u0000~\u00008"
+"q\u0000~\u0000/pq\u0000~\u0000Lq\u0000~\u0000\\q\u0000~\u0000Asq\u0000~\u0000Bt\u0000\u0006namingq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u0000+"
+"q\u0000~\u0000/psq\u0000~\u00000q\u0000~\u0000/p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00000pp\u0000sq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000/psq\u0000~"
+"\u00008q\u0000~\u0000/pq\u0000~\u0000;q\u0000~\u0000?q\u0000~\u0000Asq\u0000~\u0000Bt\u0000\u001chermes.config.RendererConfig"
+"q\u0000~\u0000Fsq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000Lq\u0000~\u0000\\q\u0000~\u0000Asq\u0000~\u0000Bt\u0000\brendererq\u0000~"
+"\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000/psq\u0000~\u00000q\u0000~\u0000/p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00000pp\u0000sq\u0000"
+"~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000/psq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000;q\u0000~\u0000?q\u0000~\u0000Asq\u0000~\u0000Bt\u0000\u001dhermes."
+"config.ClasspathConfigq\u0000~\u0000Fsq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000Lq\u0000~\u0000\\q\u0000~"
+"\u0000Asq\u0000~\u0000Bt\u0000\u0006loaderq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000/psq\u0000~\u00000q\u0000~\u0000/p\u0000"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u00000pp\u0000sq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000/psq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000;q\u0000~\u0000?q"
+"\u0000~\u0000Asq\u0000~\u0000Bt\u0000\u001bhermes.config.FactoryConfigq\u0000~\u0000Fsq\u0000~\u0000)ppsq\u0000~\u00008q"
+"\u0000~\u0000/pq\u0000~\u0000Lq\u0000~\u0000\\q\u0000~\u0000Asq\u0000~\u0000Bt\u0000\u0007factoryq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u0000+"
+"q\u0000~\u0000/psq\u0000~\u00000q\u0000~\u0000/p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00000pp\u0000sq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000/psq\u0000~"
+"\u00008q\u0000~\u0000/pq\u0000~\u0000;q\u0000~\u0000?q\u0000~\u0000Asq\u0000~\u0000Bt\u0000\u001ahermes.config.RemoteConfigq\u0000"
+"~\u0000Fsq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000Lq\u0000~\u0000\\q\u0000~\u0000Asq\u0000~\u0000Bt\u0000\u0006remoteq\u0000~\u0000aq\u0000"
+"~\u0000Asq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000/psq\u0000~\u00000q\u0000~\u0000/p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00000pp\u0000sq\u0000~\u0000)p"
+"psq\u0000~\u0000+q\u0000~\u0000/psq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000;q\u0000~\u0000?q\u0000~\u0000Asq\u0000~\u0000Bt\u0000\u0017hermes.conf"
+"ig.JDBCStoreq\u0000~\u0000Fsq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000Lq\u0000~\u0000\\q\u0000~\u0000Asq\u0000~\u0000Bt\u0000"
+"\tjdbcStoreq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u0000+q\u0000~\u0000/psq\u0000~\u00000q\u0000~\u0000/p\u0000sq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000Ippsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z"
+"\u0000\risAlwaysValidxq\u0000~\u0000Nq\u0000~\u0000St\u0000\u0006stringsr\u00005com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000V\u0001q\u0000~\u0000Ysq\u0000~\u0000"
+"Zq\u0000~\u0000\u00cbq\u0000~\u0000Ssq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000Lq\u0000~\u0000\\q\u0000~\u0000Asq\u0000~\u0000Bt\u0000\u0007filte"
+"rsq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00000q\u0000~\u0000/p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00000pp\u0000sq\u0000~\u0000)ppsq"
+"\u0000~\u0000+q\u0000~\u0000/psq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000;q\u0000~\u0000?q\u0000~\u0000Asq\u0000~\u0000Bt\u0000\u001chermes.config."
+"QuickFIXConfigq\u0000~\u0000Fsq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000Lq\u0000~\u0000\\q\u0000~\u0000Asq\u0000~\u0000B"
+"t\u0000\bquickFIXq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000\u00c8sq\u0000~\u0000Bt\u0000\u000eaudit"
+"Directoryq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/psq\u0000~\u0000Ippsr\u0000 com.sun.m"
+"sv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.x"
+"sd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv"
+"/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000Nq\u0000~\u0000St\u0000\u0003intq\u0000~\u0000Wsr\u0000*com.s"
+"un.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun."
+"msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/"
+"lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueCo"
+"nstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTyp"
+"eWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\b"
+"baseTypeq\u0000~\u0000\u00e9L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/Con"
+"creteType;L\u0000\tfacetNameq\u0000~\u0000Cxq\u0000~\u0000Pppq\u0000~\u0000W\u0000\u0001sr\u0000*com.sun.msv.da"
+"tatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00edppq\u0000~\u0000W\u0000\u0000sr\u0000!co"
+"m.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00e8q\u0000~\u0000St\u0000\u0004long"
+"q\u0000~\u0000Wsq\u0000~\u0000\u00ecppq\u0000~\u0000W\u0000\u0001sq\u0000~\u0000\u00f3ppq\u0000~\u0000W\u0000\u0000sr\u0000$com.sun.msv.datatype."
+"xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00e8q\u0000~\u0000St\u0000\u0007integerq\u0000~\u0000Wsr\u0000,com."
+"sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalex"
+"r\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFac"
+"etT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u00f0ppq\u0000~\u0000W\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.Num"
+"berType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Nq\u0000~\u0000St\u0000\u0007decimalq\u0000~\u0000Wq\u0000~\u0001\u0001t\u0000\u000efraction"
+"Digits\u0000\u0000\u0000\u0000q\u0000~\u0000\u00fbt\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J"
+"\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000\u00fbt\u0000\fmaxI"
+"nclusivesq\u0000~\u0001\u0005\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\u00f6q\u0000~\u0001\u0004sr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u0087"
+"8\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0001\u0006\u0080\u0000\u0000\u0000q\u0000~\u0000\u00f6q\u0000~\u0001\bsq\u0000~\u0001\n\u007f\u00ff\u00ff\u00ffq\u0000~\u0000Ysq\u0000~\u0000Zq\u0000~\u0000\u00ebq\u0000"
+"~\u0000Ssq\u0000~\u0000Bt\u0000\u0015autoBrowseRefreshRateq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~"
+"\u0000/psq\u0000~\u0000Ippsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000Nq\u0000~\u0000St\u0000\u0007booleanq\u0000~\u0000Wq\u0000~\u0000Ysq\u0000~\u0000Zq\u0000~\u0001\u0015q\u0000~\u0000Ssq\u0000~\u0000Bt\u0000\u0014ba"
+"se64EncodeMessagesq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0001\u0012sq\u0000~\u0000Bt"
+"\u0000\u0014copyJMSCorrelationIDq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0001\u0012sq\u0000"
+"~\u0000Bt\u0000\u0011copyJMSExpirationq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0001\u0012sq"
+"\u0000~\u0000Bt\u0000\u000fcopyJMSPriorityq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0001\u0012sq\u0000"
+"~\u0000Bt\u0000\u0019copyJMSProviderPropertiesq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/"
+"pq\u0000~\u0001\u0012sq\u0000~\u0000Bt\u0000\u000ecopyJMSReplyToq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq"
+"\u0000~\u0001\u0012sq\u0000~\u0000Bt\u0000\u000bcopyJMSTypeq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0001\u0012s"
+"q\u0000~\u0000Bt\u0000\u0014correctDropSemanticsq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000"
+"~\u0001\u0012sq\u0000~\u0000Bt\u0000\u0016deliveryModePersistentq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000"
+"~\u0000/pq\u0000~\u0001\u0012sq\u0000~\u0000Bt\u0000\u0013displayFactoryAdminq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u0000"
+"8q\u0000~\u0000/pq\u0000~\u0000\u00c8sq\u0000~\u0000Bt\u0000\u000bdisplayNameq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000"
+"/pq\u0000~\u0001\u0012sq\u0000~\u0000Bt\u0000\u001bembeddedMessageInBrowsePaneq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)p"
+"psq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0001\u0012sq\u0000~\u0000Bt\u0000\fenableJythonq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000"
+"~\u00008q\u0000~\u0000/pq\u0000~\u0000\u00c8sq\u0000~\u0000Bt\u0000\u0019lastEditedByHermesVersionq\u0000~\u0000aq\u0000~\u0000Asq"
+"\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000\u00c8sq\u0000~\u0000Bt\u0000\u0010lastEditedByUserq\u0000~\u0000aq\u0000~\u0000Asq"
+"\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000\u00c8sq\u0000~\u0000Bt\u0000\u000blookAndFeelq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)p"
+"psq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000\u00e6sq\u0000~\u0000Bt\u0000\u001bmaxColumnsInStatisticsTableq\u0000~\u0000aq"
+"\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000\u00e6sq\u0000~\u0000Bt\u0000\u0018maxMessagesInBrowserPa"
+"neq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000\u00e6sq\u0000~\u0000Bt\u0000\u0011maxThreadPoolS"
+"izeq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000\u00c8sq\u0000~\u0000Bt\u0000\u000fmessageFilesD"
+"irq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000\u00c8sq\u0000~\u0000Bt\u0000\u0013messageStoreSe"
+"ssionq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/psq\u0000~\u0000Ippq\u0000~\u0000\u00f6q\u0000~\u0000Ysq\u0000~\u0000Zq"
+"\u0000~\u0000\u00f7q\u0000~\u0000Ssq\u0000~\u0000Bt\u0000\u001aqueueBrowseConsumerTimeoutq\u0000~\u0000aq\u0000~\u0000Asq\u0000~\u0000)"
+"ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0001\u0012sq\u0000~\u0000Bt\u0000\u001ascrollMessagesDuringBrowseq\u0000~\u0000aq"
+"\u0000~\u0000Asq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000\u00c8sq\u0000~\u0000Bt\u0000\fselectorImplq\u0000~\u0000aq\u0000~\u0000A"
+"sq\u0000~\u0000)ppsq\u0000~\u00008q\u0000~\u0000/pq\u0000~\u0000\u00e6sq\u0000~\u0000Bt\u0000\u0007versionq\u0000~\u0000aq\u0000~\u0000Asr\u0000\"com.s"
+"un.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/s"
+"un/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.g"
+"rammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstream"
+"VersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000"
+"x\u0001pq\u0000~\u0001\u0010q\u0000~\u0000(q\u0000~\u0000\u0005q\u0000~\u0000\fq\u0000~\u00011q\u0000~\u0000\"q\u0000~\u0000\u0018q\u0000~\u0000\u00c7q\u0000~\u0001Aq\u0000~\u0000-q\u0000~\u0000cq\u0000"
+"~\u0000qq\u0000~\u0000\u007fq\u0000~\u0000\u008dq\u0000~\u0000\u009bq\u0000~\u0000\u00a9q\u0000~\u0001=q\u0000~\u0001Iq\u0000~\u0000\u00b7q\u0000~\u0000\u0010q\u0000~\u0000\u0014q\u0000~\u0000!q\u0000~\u0001Eq\u0000"
+"~\u0000\rq\u0000~\u0001iq\u0000~\u0000\u001cq\u0000~\u0000\u000eq\u0000~\u0001]q\u0000~\u0000\u00e0q\u0000~\u0001Qq\u0000~\u00015q\u0000~\u0001Mq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000*q\u0000"
+"~\u0000bq\u0000~\u0000pq\u0000~\u0000~q\u0000~\u0000\u008cq\u0000~\u0000\u009aq\u0000~\u0000\u00a8q\u0000~\u0000\u00b6q\u0000~\u0001)q\u0000~\u0000$q\u0000~\u00019q\u0000~\u0000\u0006q\u0000~\u0000\u001eq\u0000"
+"~\u0000\u001fq\u0000~\u0000\u00d7q\u0000~\u00006q\u0000~\u0000gq\u0000~\u0000uq\u0000~\u0000\u0083q\u0000~\u0000\u0091q\u0000~\u0000\u009fq\u0000~\u0000\u00adq\u0000~\u0000\u00bbq\u0000~\u0000\u0012q\u0000~\u0000\bq\u0000"
+"~\u0000\u00d8q\u0000~\u00007q\u0000~\u0000hq\u0000~\u0000vq\u0000~\u0000\u0084q\u0000~\u0000\u0092q\u0000~\u0000\u00a0q\u0000~\u0000\u00aeq\u0000~\u0000\u00bcq\u0000~\u0000\u000bq\u0000~\u0001Yq\u0000~\u0000\'q\u0000"
+"~\u0000\u0013q\u0000~\u0000\u001aq\u0000~\u0000\u00d5q\u0000~\u00004q\u0000~\u0000eq\u0000~\u0000sq\u0000~\u0000\u0081q\u0000~\u0000\u008fq\u0000~\u0000\u009dq\u0000~\u0001\u0019q\u0000~\u0000\u00abq\u0000~\u0000\u00b9q\u0000"
+"~\u0000\u00c4q\u0000~\u0000\u0007q\u0000~\u0000\u001bq\u0000~\u0001eq\u0000~\u0000\u0011q\u0000~\u0000\u00e4q\u0000~\u0001sq\u0000~\u0000#q\u0000~\u0000\u0017q\u0000~\u0001%q\u0000~\u0000 q\u0000~\u0001wq\u0000"
+"~\u0000&q\u0000~\u0000%q\u0000~\u0001oq\u0000~\u0000\u0015q\u0000~\u0000\u000fq\u0000~\u0001\u001dq\u0000~\u0000\u00dcq\u0000~\u0000Gq\u0000~\u0000lq\u0000~\u0000zq\u0000~\u0000\u0088q\u0000~\u0000\u0096q\u0000"
+"~\u0000\tq\u0000~\u0000\u00a4q\u0000~\u0000\u00b2q\u0000~\u0000\u00c0q\u0000~\u0000\u00cfq\u0000~\u0000\u00d3q\u0000~\u0001-q\u0000~\u0001Uq\u0000~\u0001!q\u0000~\u0000\nq\u0000~\u0001aq\u0000~\u0000\u00c5q\u0000"
+"~\u0000\u0016x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends hermes.config.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(hermes.config.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------------------------------------------------------------------------------------");
        }

        protected Unmarshaller(hermes.config.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return hermes.config.impl.HermesConfigImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  45 :
                        attIdx = context.getAttribute("", "lastEditedByHermesVersion");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 48;
                            continue outer;
                        }
                        state = 48;
                        continue outer;
                    case  27 :
                        attIdx = context.getAttribute("", "correctDropSemantics");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 30;
                            continue outer;
                        }
                        state = 30;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "copyJMSPriority");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  96 :
                        if (("loader" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 94;
                            return ;
                        }
                        if (("factory" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 97;
                            return ;
                        }
                        state = 99;
                        continue outer;
                    case  63 :
                        attIdx = context.getAttribute("", "messageFilesDir");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 66;
                            continue outer;
                        }
                        state = 66;
                        continue outer;
                    case  30 :
                        attIdx = context.getAttribute("", "deliveryModePersistent");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 33;
                            continue outer;
                        }
                        state = 33;
                        continue outer;
                    case  99 :
                        if (("factory" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 97;
                            return ;
                        }
                        if (("remote" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 100;
                            return ;
                        }
                        state = 102;
                        continue outer;
                    case  42 :
                        attIdx = context.getAttribute("", "enableJython");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 45;
                            continue outer;
                        }
                        state = 45;
                        continue outer;
                    case  81 :
                        if (("classpathGroup" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 82;
                            return ;
                        }
                        state = 84;
                        continue outer;
                    case  85 :
                        attIdx = context.getAttribute("", "defaultAgeAlertThreshold");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "defaultDepthAlertThreshold");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "showAge");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "updateFrequency");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("destination" == ___local)&&("" == ___uri)) {
                            _getWatch().add(((hermes.config.impl.WatchConfigImpl) spawnChildFromEnterElement((hermes.config.impl.WatchConfigImpl.class), 86, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getWatch().add(((hermes.config.impl.WatchConfigImpl) spawnChildFromEnterElement((hermes.config.impl.WatchConfigImpl.class), 86, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "copyJMSCorrelationID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  93 :
                        if (("renderer" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 91;
                            return ;
                        }
                        if (("loader" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 94;
                            return ;
                        }
                        state = 96;
                        continue outer;
                    case  57 :
                        attIdx = context.getAttribute("", "maxMessagesInBrowserPane");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 60;
                            continue outer;
                        }
                        state = 60;
                        continue outer;
                    case  24 :
                        attIdx = context.getAttribute("", "copyJMSType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 27;
                            continue outer;
                        }
                        state = 27;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "autoBrowseRefreshRate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  69 :
                        attIdx = context.getAttribute("", "queueBrowseConsumerTimeout");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 72;
                            continue outer;
                        }
                        state = 72;
                        continue outer;
                    case  78 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText12(v);
                            state = 81;
                            continue outer;
                        }
                        state = 81;
                        continue outer;
                    case  84 :
                        if (("classpathGroup" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 82;
                            return ;
                        }
                        if (("watch" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 85;
                            return ;
                        }
                        state = 87;
                        continue outer;
                    case  97 :
                        attIdx = context.getAttribute("", "classpathId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("provider" == ___local)&&("" == ___uri)) {
                            _getFactory().add(((hermes.config.impl.FactoryConfigImpl) spawnChildFromEnterElement((hermes.config.impl.FactoryConfigImpl.class), 98, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "base64EncodeMessages");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText13(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  102 :
                        if (("remote" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 100;
                            return ;
                        }
                        if (("jdbcStore" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 103;
                            return ;
                        }
                        state = 105;
                        continue outer;
                    case  60 :
                        attIdx = context.getAttribute("", "maxThreadPoolSize");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText14(v);
                            state = 63;
                            continue outer;
                        }
                        state = 63;
                        continue outer;
                    case  103 :
                        attIdx = context.getAttribute("", "alias");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "driver");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "url");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        _getJdbcStore().add(((hermes.config.impl.JDBCStoreImpl) spawnChildFromEnterElement((hermes.config.impl.JDBCStoreImpl.class), 104, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  33 :
                        attIdx = context.getAttribute("", "displayFactoryAdmin");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText15(v);
                            state = 36;
                            continue outer;
                        }
                        state = 36;
                        continue outer;
                    case  91 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("properties" == ___local)&&("" == ___uri)) {
                            _getRenderer().add(((hermes.config.impl.RendererConfigImpl) spawnChildFromEnterElement((hermes.config.impl.RendererConfigImpl.class), 92, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getRenderer().add(((hermes.config.impl.RendererConfigImpl) spawnChildFromEnterElement((hermes.config.impl.RendererConfigImpl.class), 92, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  111 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  90 :
                        if (("naming" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 88;
                            return ;
                        }
                        if (("renderer" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 91;
                            return ;
                        }
                        state = 93;
                        continue outer;
                    case  88 :
                        attIdx = context.getAttribute("", "classpathId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("properties" == ___local)&&("" == ___uri)) {
                            _getNaming().add(((hermes.config.impl.NamingConfigImpl) spawnChildFromEnterElement((hermes.config.impl.NamingConfigImpl.class), 89, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getNaming().add(((hermes.config.impl.NamingConfigImpl) spawnChildFromEnterElement((hermes.config.impl.NamingConfigImpl.class), 89, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  66 :
                        attIdx = context.getAttribute("", "messageStoreSession");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText16(v);
                            state = 69;
                            continue outer;
                        }
                        state = 69;
                        continue outer;
                    case  108 :
                        if (("filters" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 106;
                            return ;
                        }
                        if (("quickFIX" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 109;
                            return ;
                        }
                        state = 111;
                        continue outer;
                    case  21 :
                        attIdx = context.getAttribute("", "copyJMSReplyTo");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText17(v);
                            state = 24;
                            continue outer;
                        }
                        state = 24;
                        continue outer;
                    case  94 :
                        attIdx = context.getAttribute("", "factories");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "jar");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "noFactories");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        _getLoader().add(((hermes.config.impl.ClasspathConfigImpl) spawnChildFromEnterElement((hermes.config.impl.ClasspathConfigImpl.class), 95, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  48 :
                        attIdx = context.getAttribute("", "lastEditedByUser");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText18(v);
                            state = 51;
                            continue outer;
                        }
                        state = 51;
                        continue outer;
                    case  82 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("library" == ___local)&&("" == ___uri)) {
                            _getClasspathGroup().add(((hermes.config.impl.ClasspathGroupConfigImpl) spawnChildFromEnterElement((hermes.config.impl.ClasspathGroupConfigImpl.class), 83, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getClasspathGroup().add(((hermes.config.impl.ClasspathGroupConfigImpl) spawnChildFromEnterElement((hermes.config.impl.ClasspathGroupConfigImpl.class), 83, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  54 :
                        attIdx = context.getAttribute("", "maxColumnsInStatisticsTable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText19(v);
                            state = 57;
                            continue outer;
                        }
                        state = 57;
                        continue outer;
                    case  39 :
                        attIdx = context.getAttribute("", "embeddedMessageInBrowsePane");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText20(v);
                            state = 42;
                            continue outer;
                        }
                        state = 42;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "auditDirectory");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText21(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  100 :
                        attIdx = context.getAttribute("", "binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("namingConfig" == ___local)&&("" == ___uri)) {
                            _getRemote().add(((hermes.config.impl.RemoteConfigImpl) spawnChildFromEnterElement((hermes.config.impl.RemoteConfigImpl.class), 101, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  87 :
                        if (("watch" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 85;
                            return ;
                        }
                        if (("naming" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 88;
                            return ;
                        }
                        state = 90;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "copyJMSExpiration");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText22(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  51 :
                        attIdx = context.getAttribute("", "lookAndFeel");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText23(v);
                            state = 54;
                            continue outer;
                        }
                        state = 54;
                        continue outer;
                    case  36 :
                        attIdx = context.getAttribute("", "displayName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText24(v);
                            state = 39;
                            continue outer;
                        }
                        state = 39;
                        continue outer;
                    case  105 :
                        if (("jdbcStore" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 103;
                            return ;
                        }
                        if (("filters" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 106;
                            return ;
                        }
                        state = 108;
                        continue outer;
                    case  109 :
                        attIdx = context.getAttribute("", "cacheSize");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "filterSessionMsgTypes");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        _QuickFIX = ((hermes.config.impl.QuickFIXConfigImpl) spawnChildFromEnterElement((hermes.config.impl.QuickFIXConfigImpl.class), 110, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  18 :
                        attIdx = context.getAttribute("", "copyJMSProviderProperties");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText25(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  72 :
                        attIdx = context.getAttribute("", "scrollMessagesDuringBrowse");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText26(v);
                            state = 75;
                            continue outer;
                        }
                        state = 75;
                        continue outer;
                    case  75 :
                        attIdx = context.getAttribute("", "selectorImpl");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText27(v);
                            state = 78;
                            continue outer;
                        }
                        state = 78;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _LastEditedByHermesVersion = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CorrectDropSemantics = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_CorrectDropSemantics = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CopyJMSPriority = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_CopyJMSPriority = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageFilesDir = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DeliveryModePersistent = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_DeliveryModePersistent = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EnableJython = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_EnableJython = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CopyJMSCorrelationID = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_CopyJMSCorrelationID = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MaxMessagesInBrowserPane = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MaxMessagesInBrowserPane = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CopyJMSType = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_CopyJMSType = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AutoBrowseRefreshRate = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AutoBrowseRefreshRate = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _QueueBrowseConsumerTimeout = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_QueueBrowseConsumerTimeout = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Version = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Version = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Base64EncodeMessages = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Base64EncodeMessages = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MaxThreadPoolSize = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MaxThreadPoolSize = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DisplayFactoryAdmin = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_DisplayFactoryAdmin = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageStoreSession = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText17(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CopyJMSReplyTo = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_CopyJMSReplyTo = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText18(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _LastEditedByUser = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText19(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MaxColumnsInStatisticsTable = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MaxColumnsInStatisticsTable = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText20(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EmbeddedMessageInBrowsePane = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_EmbeddedMessageInBrowsePane = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText21(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AuditDirectory = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText22(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CopyJMSExpiration = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_CopyJMSExpiration = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText23(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _LookAndFeel = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText24(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DisplayName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText25(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CopyJMSProviderProperties = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_CopyJMSProviderProperties = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText26(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ScrollMessagesDuringBrowse = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ScrollMessagesDuringBrowse = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText27(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SelectorImpl = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  45 :
                        attIdx = context.getAttribute("", "lastEditedByHermesVersion");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 48;
                            continue outer;
                        }
                        state = 48;
                        continue outer;
                    case  27 :
                        attIdx = context.getAttribute("", "correctDropSemantics");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 30;
                            continue outer;
                        }
                        state = 30;
                        continue outer;
                    case  95 :
                        if (("loader" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 96;
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "copyJMSPriority");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  96 :
                        state = 99;
                        continue outer;
                    case  63 :
                        attIdx = context.getAttribute("", "messageFilesDir");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 66;
                            continue outer;
                        }
                        state = 66;
                        continue outer;
                    case  30 :
                        attIdx = context.getAttribute("", "deliveryModePersistent");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 33;
                            continue outer;
                        }
                        state = 33;
                        continue outer;
                    case  99 :
                        state = 102;
                        continue outer;
                    case  107 :
                        if (("filters" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 108;
                            return ;
                        }
                        break;
                    case  42 :
                        attIdx = context.getAttribute("", "enableJython");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 45;
                            continue outer;
                        }
                        state = 45;
                        continue outer;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  85 :
                        attIdx = context.getAttribute("", "defaultAgeAlertThreshold");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "defaultDepthAlertThreshold");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "showAge");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "updateFrequency");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getWatch().add(((hermes.config.impl.WatchConfigImpl) spawnChildFromLeaveElement((hermes.config.impl.WatchConfigImpl.class), 86, ___uri, ___local, ___qname)));
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "copyJMSCorrelationID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  93 :
                        state = 96;
                        continue outer;
                    case  57 :
                        attIdx = context.getAttribute("", "maxMessagesInBrowserPane");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 60;
                            continue outer;
                        }
                        state = 60;
                        continue outer;
                    case  104 :
                        if (("jdbcStore" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 105;
                            return ;
                        }
                        break;
                    case  24 :
                        attIdx = context.getAttribute("", "copyJMSType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 27;
                            continue outer;
                        }
                        state = 27;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "autoBrowseRefreshRate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  69 :
                        attIdx = context.getAttribute("", "queueBrowseConsumerTimeout");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 72;
                            continue outer;
                        }
                        state = 72;
                        continue outer;
                    case  110 :
                        if (("quickFIX" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 111;
                            return ;
                        }
                        break;
                    case  98 :
                        if (("factory" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 99;
                            return ;
                        }
                        break;
                    case  86 :
                        if (("watch" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 87;
                            return ;
                        }
                        break;
                    case  78 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText12(v);
                            state = 81;
                            continue outer;
                        }
                        state = 81;
                        continue outer;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  92 :
                        if (("renderer" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 93;
                            return ;
                        }
                        break;
                    case  97 :
                        attIdx = context.getAttribute("", "classpathId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  89 :
                        if (("naming" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 90;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "base64EncodeMessages");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText13(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  60 :
                        attIdx = context.getAttribute("", "maxThreadPoolSize");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText14(v);
                            state = 63;
                            continue outer;
                        }
                        state = 63;
                        continue outer;
                    case  103 :
                        attIdx = context.getAttribute("", "alias");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "driver");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "url");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getJdbcStore().add(((hermes.config.impl.JDBCStoreImpl) spawnChildFromLeaveElement((hermes.config.impl.JDBCStoreImpl.class), 104, ___uri, ___local, ___qname)));
                        return ;
                    case  33 :
                        attIdx = context.getAttribute("", "displayFactoryAdmin");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText15(v);
                            state = 36;
                            continue outer;
                        }
                        state = 36;
                        continue outer;
                    case  91 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getRenderer().add(((hermes.config.impl.RendererConfigImpl) spawnChildFromLeaveElement((hermes.config.impl.RendererConfigImpl.class), 92, ___uri, ___local, ___qname)));
                        return ;
                    case  111 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  88 :
                        attIdx = context.getAttribute("", "classpathId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getNaming().add(((hermes.config.impl.NamingConfigImpl) spawnChildFromLeaveElement((hermes.config.impl.NamingConfigImpl.class), 89, ___uri, ___local, ___qname)));
                        return ;
                    case  66 :
                        attIdx = context.getAttribute("", "messageStoreSession");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText16(v);
                            state = 69;
                            continue outer;
                        }
                        state = 69;
                        continue outer;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  21 :
                        attIdx = context.getAttribute("", "copyJMSReplyTo");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText17(v);
                            state = 24;
                            continue outer;
                        }
                        state = 24;
                        continue outer;
                    case  83 :
                        if (("classpathGroup" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 84;
                            return ;
                        }
                        break;
                    case  94 :
                        attIdx = context.getAttribute("", "factories");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "jar");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "noFactories");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getLoader().add(((hermes.config.impl.ClasspathConfigImpl) spawnChildFromLeaveElement((hermes.config.impl.ClasspathConfigImpl.class), 95, ___uri, ___local, ___qname)));
                        return ;
                    case  48 :
                        attIdx = context.getAttribute("", "lastEditedByUser");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText18(v);
                            state = 51;
                            continue outer;
                        }
                        state = 51;
                        continue outer;
                    case  82 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getClasspathGroup().add(((hermes.config.impl.ClasspathGroupConfigImpl) spawnChildFromLeaveElement((hermes.config.impl.ClasspathGroupConfigImpl.class), 83, ___uri, ___local, ___qname)));
                        return ;
                    case  54 :
                        attIdx = context.getAttribute("", "maxColumnsInStatisticsTable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText19(v);
                            state = 57;
                            continue outer;
                        }
                        state = 57;
                        continue outer;
                    case  39 :
                        attIdx = context.getAttribute("", "embeddedMessageInBrowsePane");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText20(v);
                            state = 42;
                            continue outer;
                        }
                        state = 42;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "auditDirectory");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText21(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  100 :
                        attIdx = context.getAttribute("", "binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "copyJMSExpiration");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText22(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  101 :
                        if (("remote" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 102;
                            return ;
                        }
                        break;
                    case  51 :
                        attIdx = context.getAttribute("", "lookAndFeel");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText23(v);
                            state = 54;
                            continue outer;
                        }
                        state = 54;
                        continue outer;
                    case  36 :
                        attIdx = context.getAttribute("", "displayName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText24(v);
                            state = 39;
                            continue outer;
                        }
                        state = 39;
                        continue outer;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  109 :
                        attIdx = context.getAttribute("", "cacheSize");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "filterSessionMsgTypes");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _QuickFIX = ((hermes.config.impl.QuickFIXConfigImpl) spawnChildFromLeaveElement((hermes.config.impl.QuickFIXConfigImpl.class), 110, ___uri, ___local, ___qname));
                        return ;
                    case  18 :
                        attIdx = context.getAttribute("", "copyJMSProviderProperties");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText25(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  72 :
                        attIdx = context.getAttribute("", "scrollMessagesDuringBrowse");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText26(v);
                            state = 75;
                            continue outer;
                        }
                        state = 75;
                        continue outer;
                    case  75 :
                        attIdx = context.getAttribute("", "selectorImpl");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText27(v);
                            state = 78;
                            continue outer;
                        }
                        state = 78;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  45 :
                        if (("lastEditedByHermesVersion" == ___local)&&("" == ___uri)) {
                            state = 46;
                            return ;
                        }
                        state = 48;
                        continue outer;
                    case  27 :
                        if (("correctDropSemantics" == ___local)&&("" == ___uri)) {
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  15 :
                        if (("copyJMSPriority" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  96 :
                        state = 99;
                        continue outer;
                    case  63 :
                        if (("messageFilesDir" == ___local)&&("" == ___uri)) {
                            state = 64;
                            return ;
                        }
                        state = 66;
                        continue outer;
                    case  30 :
                        if (("deliveryModePersistent" == ___local)&&("" == ___uri)) {
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  99 :
                        state = 102;
                        continue outer;
                    case  42 :
                        if (("enableJython" == ___local)&&("" == ___uri)) {
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  85 :
                        if (("defaultAgeAlertThreshold" == ___local)&&("" == ___uri)) {
                            _getWatch().add(((hermes.config.impl.WatchConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.WatchConfigImpl.class), 86, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("defaultDepthAlertThreshold" == ___local)&&("" == ___uri)) {
                            _getWatch().add(((hermes.config.impl.WatchConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.WatchConfigImpl.class), 86, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("id" == ___local)&&("" == ___uri)) {
                            _getWatch().add(((hermes.config.impl.WatchConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.WatchConfigImpl.class), 86, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("showAge" == ___local)&&("" == ___uri)) {
                            _getWatch().add(((hermes.config.impl.WatchConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.WatchConfigImpl.class), 86, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("updateFrequency" == ___local)&&("" == ___uri)) {
                            _getWatch().add(((hermes.config.impl.WatchConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.WatchConfigImpl.class), 86, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getWatch().add(((hermes.config.impl.WatchConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.WatchConfigImpl.class), 86, ___uri, ___local, ___qname)));
                        return ;
                    case  9 :
                        if (("copyJMSCorrelationID" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  93 :
                        state = 96;
                        continue outer;
                    case  57 :
                        if (("maxMessagesInBrowserPane" == ___local)&&("" == ___uri)) {
                            state = 58;
                            return ;
                        }
                        state = 60;
                        continue outer;
                    case  24 :
                        if (("copyJMSType" == ___local)&&("" == ___uri)) {
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  3 :
                        if (("autoBrowseRefreshRate" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  69 :
                        if (("queueBrowseConsumerTimeout" == ___local)&&("" == ___uri)) {
                            state = 70;
                            return ;
                        }
                        state = 72;
                        continue outer;
                    case  78 :
                        if (("version" == ___local)&&("" == ___uri)) {
                            state = 79;
                            return ;
                        }
                        state = 81;
                        continue outer;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  97 :
                        if (("classpathId" == ___local)&&("" == ___uri)) {
                            _getFactory().add(((hermes.config.impl.FactoryConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.FactoryConfigImpl.class), 98, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  6 :
                        if (("base64EncodeMessages" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  60 :
                        if (("maxThreadPoolSize" == ___local)&&("" == ___uri)) {
                            state = 61;
                            return ;
                        }
                        state = 63;
                        continue outer;
                    case  103 :
                        if (("alias" == ___local)&&("" == ___uri)) {
                            _getJdbcStore().add(((hermes.config.impl.JDBCStoreImpl) spawnChildFromEnterAttribute((hermes.config.impl.JDBCStoreImpl.class), 104, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("driver" == ___local)&&("" == ___uri)) {
                            _getJdbcStore().add(((hermes.config.impl.JDBCStoreImpl) spawnChildFromEnterAttribute((hermes.config.impl.JDBCStoreImpl.class), 104, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("url" == ___local)&&("" == ___uri)) {
                            _getJdbcStore().add(((hermes.config.impl.JDBCStoreImpl) spawnChildFromEnterAttribute((hermes.config.impl.JDBCStoreImpl.class), 104, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getJdbcStore().add(((hermes.config.impl.JDBCStoreImpl) spawnChildFromEnterAttribute((hermes.config.impl.JDBCStoreImpl.class), 104, ___uri, ___local, ___qname)));
                        return ;
                    case  33 :
                        if (("displayFactoryAdmin" == ___local)&&("" == ___uri)) {
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  91 :
                        if (("className" == ___local)&&("" == ___uri)) {
                            _getRenderer().add(((hermes.config.impl.RendererConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.RendererConfigImpl.class), 92, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("name" == ___local)&&("" == ___uri)) {
                            _getRenderer().add(((hermes.config.impl.RendererConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.RendererConfigImpl.class), 92, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getRenderer().add(((hermes.config.impl.RendererConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.RendererConfigImpl.class), 92, ___uri, ___local, ___qname)));
                        return ;
                    case  111 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  88 :
                        if (("classpathId" == ___local)&&("" == ___uri)) {
                            _getNaming().add(((hermes.config.impl.NamingConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.NamingConfigImpl.class), 89, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("id" == ___local)&&("" == ___uri)) {
                            _getNaming().add(((hermes.config.impl.NamingConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.NamingConfigImpl.class), 89, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getNaming().add(((hermes.config.impl.NamingConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.NamingConfigImpl.class), 89, ___uri, ___local, ___qname)));
                        return ;
                    case  66 :
                        if (("messageStoreSession" == ___local)&&("" == ___uri)) {
                            state = 67;
                            return ;
                        }
                        state = 69;
                        continue outer;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  21 :
                        if (("copyJMSReplyTo" == ___local)&&("" == ___uri)) {
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  94 :
                        if (("factories" == ___local)&&("" == ___uri)) {
                            _getLoader().add(((hermes.config.impl.ClasspathConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ClasspathConfigImpl.class), 95, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("jar" == ___local)&&("" == ___uri)) {
                            _getLoader().add(((hermes.config.impl.ClasspathConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ClasspathConfigImpl.class), 95, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("noFactories" == ___local)&&("" == ___uri)) {
                            _getLoader().add(((hermes.config.impl.ClasspathConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ClasspathConfigImpl.class), 95, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getLoader().add(((hermes.config.impl.ClasspathConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ClasspathConfigImpl.class), 95, ___uri, ___local, ___qname)));
                        return ;
                    case  48 :
                        if (("lastEditedByUser" == ___local)&&("" == ___uri)) {
                            state = 49;
                            return ;
                        }
                        state = 51;
                        continue outer;
                    case  82 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            _getClasspathGroup().add(((hermes.config.impl.ClasspathGroupConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ClasspathGroupConfigImpl.class), 83, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getClasspathGroup().add(((hermes.config.impl.ClasspathGroupConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.ClasspathGroupConfigImpl.class), 83, ___uri, ___local, ___qname)));
                        return ;
                    case  54 :
                        if (("maxColumnsInStatisticsTable" == ___local)&&("" == ___uri)) {
                            state = 55;
                            return ;
                        }
                        state = 57;
                        continue outer;
                    case  39 :
                        if (("embeddedMessageInBrowsePane" == ___local)&&("" == ___uri)) {
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  0 :
                        if (("auditDirectory" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  100 :
                        if (("binding" == ___local)&&("" == ___uri)) {
                            _getRemote().add(((hermes.config.impl.RemoteConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.RemoteConfigImpl.class), 101, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("id" == ___local)&&("" == ___uri)) {
                            _getRemote().add(((hermes.config.impl.RemoteConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.RemoteConfigImpl.class), 101, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  12 :
                        if (("copyJMSExpiration" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  51 :
                        if (("lookAndFeel" == ___local)&&("" == ___uri)) {
                            state = 52;
                            return ;
                        }
                        state = 54;
                        continue outer;
                    case  36 :
                        if (("displayName" == ___local)&&("" == ___uri)) {
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  109 :
                        if (("cacheSize" == ___local)&&("" == ___uri)) {
                            _QuickFIX = ((hermes.config.impl.QuickFIXConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.QuickFIXConfigImpl.class), 110, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("filterSessionMsgTypes" == ___local)&&("" == ___uri)) {
                            _QuickFIX = ((hermes.config.impl.QuickFIXConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.QuickFIXConfigImpl.class), 110, ___uri, ___local, ___qname));
                            return ;
                        }
                        _QuickFIX = ((hermes.config.impl.QuickFIXConfigImpl) spawnChildFromEnterAttribute((hermes.config.impl.QuickFIXConfigImpl.class), 110, ___uri, ___local, ___qname));
                        return ;
                    case  18 :
                        if (("copyJMSProviderProperties" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  72 :
                        if (("scrollMessagesDuringBrowse" == ___local)&&("" == ___uri)) {
                            state = 73;
                            return ;
                        }
                        state = 75;
                        continue outer;
                    case  75 :
                        if (("selectorImpl" == ___local)&&("" == ___uri)) {
                            state = 76;
                            return ;
                        }
                        state = 78;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  45 :
                        attIdx = context.getAttribute("", "lastEditedByHermesVersion");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 48;
                            continue outer;
                        }
                        state = 48;
                        continue outer;
                    case  35 :
                        if (("displayFactoryAdmin" == ___local)&&("" == ___uri)) {
                            state = 36;
                            return ;
                        }
                        break;
                    case  27 :
                        attIdx = context.getAttribute("", "correctDropSemantics");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 30;
                            continue outer;
                        }
                        state = 30;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "copyJMSPriority");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  96 :
                        state = 99;
                        continue outer;
                    case  59 :
                        if (("maxMessagesInBrowserPane" == ___local)&&("" == ___uri)) {
                            state = 60;
                            return ;
                        }
                        break;
                    case  63 :
                        attIdx = context.getAttribute("", "messageFilesDir");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 66;
                            continue outer;
                        }
                        state = 66;
                        continue outer;
                    case  30 :
                        attIdx = context.getAttribute("", "deliveryModePersistent");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 33;
                            continue outer;
                        }
                        state = 33;
                        continue outer;
                    case  99 :
                        state = 102;
                        continue outer;
                    case  42 :
                        attIdx = context.getAttribute("", "enableJython");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 45;
                            continue outer;
                        }
                        state = 45;
                        continue outer;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  85 :
                        attIdx = context.getAttribute("", "defaultAgeAlertThreshold");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "defaultDepthAlertThreshold");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "showAge");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "updateFrequency");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getWatch().add(((hermes.config.impl.WatchConfigImpl) spawnChildFromLeaveAttribute((hermes.config.impl.WatchConfigImpl.class), 86, ___uri, ___local, ___qname)));
                        return ;
                    case  47 :
                        if (("lastEditedByHermesVersion" == ___local)&&("" == ___uri)) {
                            state = 48;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "copyJMSCorrelationID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  29 :
                        if (("correctDropSemantics" == ___local)&&("" == ___uri)) {
                            state = 30;
                            return ;
                        }
                        break;
                    case  93 :
                        state = 96;
                        continue outer;
                    case  57 :
                        attIdx = context.getAttribute("", "maxMessagesInBrowserPane");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 60;
                            continue outer;
                        }
                        state = 60;
                        continue outer;
                    case  24 :
                        attIdx = context.getAttribute("", "copyJMSType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 27;
                            continue outer;
                        }
                        state = 27;
                        continue outer;
                    case  44 :
                        if (("enableJython" == ___local)&&("" == ___uri)) {
                            state = 45;
                            return ;
                        }
                        break;
                    case  77 :
                        if (("selectorImpl" == ___local)&&("" == ___uri)) {
                            state = 78;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "autoBrowseRefreshRate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  69 :
                        attIdx = context.getAttribute("", "queueBrowseConsumerTimeout");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 72;
                            continue outer;
                        }
                        state = 72;
                        continue outer;
                    case  5 :
                        if (("autoBrowseRefreshRate" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  53 :
                        if (("lookAndFeel" == ___local)&&("" == ___uri)) {
                            state = 54;
                            return ;
                        }
                        break;
                    case  78 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText12(v);
                            state = 81;
                            continue outer;
                        }
                        state = 81;
                        continue outer;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  97 :
                        attIdx = context.getAttribute("", "classpathId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "base64EncodeMessages");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText13(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  23 :
                        if (("copyJMSReplyTo" == ___local)&&("" == ___uri)) {
                            state = 24;
                            return ;
                        }
                        break;
                    case  60 :
                        attIdx = context.getAttribute("", "maxThreadPoolSize");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText14(v);
                            state = 63;
                            continue outer;
                        }
                        state = 63;
                        continue outer;
                    case  103 :
                        attIdx = context.getAttribute("", "alias");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "driver");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "url");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getJdbcStore().add(((hermes.config.impl.JDBCStoreImpl) spawnChildFromLeaveAttribute((hermes.config.impl.JDBCStoreImpl.class), 104, ___uri, ___local, ___qname)));
                        return ;
                    case  33 :
                        attIdx = context.getAttribute("", "displayFactoryAdmin");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText15(v);
                            state = 36;
                            continue outer;
                        }
                        state = 36;
                        continue outer;
                    case  91 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getRenderer().add(((hermes.config.impl.RendererConfigImpl) spawnChildFromLeaveAttribute((hermes.config.impl.RendererConfigImpl.class), 92, ___uri, ___local, ___qname)));
                        return ;
                    case  111 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  88 :
                        attIdx = context.getAttribute("", "classpathId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getNaming().add(((hermes.config.impl.NamingConfigImpl) spawnChildFromLeaveAttribute((hermes.config.impl.NamingConfigImpl.class), 89, ___uri, ___local, ___qname)));
                        return ;
                    case  32 :
                        if (("deliveryModePersistent" == ___local)&&("" == ___uri)) {
                            state = 33;
                            return ;
                        }
                        break;
                    case  71 :
                        if (("queueBrowseConsumerTimeout" == ___local)&&("" == ___uri)) {
                            state = 72;
                            return ;
                        }
                        break;
                    case  38 :
                        if (("displayName" == ___local)&&("" == ___uri)) {
                            state = 39;
                            return ;
                        }
                        break;
                    case  66 :
                        attIdx = context.getAttribute("", "messageStoreSession");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText16(v);
                            state = 69;
                            continue outer;
                        }
                        state = 69;
                        continue outer;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  21 :
                        attIdx = context.getAttribute("", "copyJMSReplyTo");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText17(v);
                            state = 24;
                            continue outer;
                        }
                        state = 24;
                        continue outer;
                    case  94 :
                        attIdx = context.getAttribute("", "factories");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "jar");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "noFactories");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getLoader().add(((hermes.config.impl.ClasspathConfigImpl) spawnChildFromLeaveAttribute((hermes.config.impl.ClasspathConfigImpl.class), 95, ___uri, ___local, ___qname)));
                        return ;
                    case  48 :
                        attIdx = context.getAttribute("", "lastEditedByUser");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText18(v);
                            state = 51;
                            continue outer;
                        }
                        state = 51;
                        continue outer;
                    case  20 :
                        if (("copyJMSProviderProperties" == ___local)&&("" == ___uri)) {
                            state = 21;
                            return ;
                        }
                        break;
                    case  82 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getClasspathGroup().add(((hermes.config.impl.ClasspathGroupConfigImpl) spawnChildFromLeaveAttribute((hermes.config.impl.ClasspathGroupConfigImpl.class), 83, ___uri, ___local, ___qname)));
                        return ;
                    case  26 :
                        if (("copyJMSType" == ___local)&&("" == ___uri)) {
                            state = 27;
                            return ;
                        }
                        break;
                    case  54 :
                        attIdx = context.getAttribute("", "maxColumnsInStatisticsTable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText19(v);
                            state = 57;
                            continue outer;
                        }
                        state = 57;
                        continue outer;
                    case  39 :
                        attIdx = context.getAttribute("", "embeddedMessageInBrowsePane");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText20(v);
                            state = 42;
                            continue outer;
                        }
                        state = 42;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "auditDirectory");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText21(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  100 :
                        attIdx = context.getAttribute("", "binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "copyJMSExpiration");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText22(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  8 :
                        if (("base64EncodeMessages" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  41 :
                        if (("embeddedMessageInBrowsePane" == ___local)&&("" == ___uri)) {
                            state = 42;
                            return ;
                        }
                        break;
                    case  68 :
                        if (("messageStoreSession" == ___local)&&("" == ___uri)) {
                            state = 69;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("copyJMSPriority" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("auditDirectory" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  80 :
                        if (("version" == ___local)&&("" == ___uri)) {
                            state = 81;
                            return ;
                        }
                        break;
                    case  74 :
                        if (("scrollMessagesDuringBrowse" == ___local)&&("" == ___uri)) {
                            state = 75;
                            return ;
                        }
                        break;
                    case  65 :
                        if (("messageFilesDir" == ___local)&&("" == ___uri)) {
                            state = 66;
                            return ;
                        }
                        break;
                    case  51 :
                        attIdx = context.getAttribute("", "lookAndFeel");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText23(v);
                            state = 54;
                            continue outer;
                        }
                        state = 54;
                        continue outer;
                    case  36 :
                        attIdx = context.getAttribute("", "displayName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText24(v);
                            state = 39;
                            continue outer;
                        }
                        state = 39;
                        continue outer;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  50 :
                        if (("lastEditedByUser" == ___local)&&("" == ___uri)) {
                            state = 51;
                            return ;
                        }
                        break;
                    case  109 :
                        attIdx = context.getAttribute("", "cacheSize");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "filterSessionMsgTypes");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _QuickFIX = ((hermes.config.impl.QuickFIXConfigImpl) spawnChildFromLeaveAttribute((hermes.config.impl.QuickFIXConfigImpl.class), 110, ___uri, ___local, ___qname));
                        return ;
                    case  11 :
                        if (("copyJMSCorrelationID" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  18 :
                        attIdx = context.getAttribute("", "copyJMSProviderProperties");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText25(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  62 :
                        if (("maxThreadPoolSize" == ___local)&&("" == ___uri)) {
                            state = 63;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("copyJMSExpiration" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  56 :
                        if (("maxColumnsInStatisticsTable" == ___local)&&("" == ___uri)) {
                            state = 57;
                            return ;
                        }
                        break;
                    case  72 :
                        attIdx = context.getAttribute("", "scrollMessagesDuringBrowse");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText26(v);
                            state = 75;
                            continue outer;
                        }
                        state = 75;
                        continue outer;
                    case  75 :
                        attIdx = context.getAttribute("", "selectorImpl");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText27(v);
                            state = 78;
                            continue outer;
                        }
                        state = 78;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  49 :
                            eatText18(value);
                            state = 50;
                            return ;
                        case  45 :
                            attIdx = context.getAttribute("", "lastEditedByHermesVersion");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 48;
                                continue outer;
                            }
                            state = 48;
                            continue outer;
                        case  64 :
                            eatText4(value);
                            state = 65;
                            return ;
                        case  37 :
                            eatText24(value);
                            state = 38;
                            return ;
                        case  27 :
                            attIdx = context.getAttribute("", "correctDropSemantics");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 30;
                                continue outer;
                            }
                            state = 30;
                            continue outer;
                        case  15 :
                            attIdx = context.getAttribute("", "copyJMSPriority");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 18;
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  96 :
                            state = 99;
                            continue outer;
                        case  63 :
                            attIdx = context.getAttribute("", "messageFilesDir");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 66;
                                continue outer;
                            }
                            state = 66;
                            continue outer;
                        case  40 :
                            eatText20(value);
                            state = 41;
                            return ;
                        case  30 :
                            attIdx = context.getAttribute("", "deliveryModePersistent");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 33;
                                continue outer;
                            }
                            state = 33;
                            continue outer;
                        case  19 :
                            eatText25(value);
                            state = 20;
                            return ;
                        case  99 :
                            state = 102;
                            continue outer;
                        case  76 :
                            eatText27(value);
                            state = 77;
                            return ;
                        case  42 :
                            attIdx = context.getAttribute("", "enableJython");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 45;
                                continue outer;
                            }
                            state = 45;
                            continue outer;
                        case  81 :
                            state = 84;
                            continue outer;
                        case  85 :
                            attIdx = context.getAttribute("", "defaultAgeAlertThreshold");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "defaultDepthAlertThreshold");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "showAge");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "updateFrequency");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getWatch().add(((hermes.config.impl.WatchConfigImpl) spawnChildFromText((hermes.config.impl.WatchConfigImpl.class), 86, value)));
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "copyJMSCorrelationID");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 12;
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  93 :
                            state = 96;
                            continue outer;
                        case  1 :
                            eatText21(value);
                            state = 2;
                            return ;
                        case  57 :
                            attIdx = context.getAttribute("", "maxMessagesInBrowserPane");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText8(v);
                                state = 60;
                                continue outer;
                            }
                            state = 60;
                            continue outer;
                        case  73 :
                            eatText26(value);
                            state = 74;
                            return ;
                        case  67 :
                            eatText16(value);
                            state = 68;
                            return ;
                        case  25 :
                            eatText9(value);
                            state = 26;
                            return ;
                        case  24 :
                            attIdx = context.getAttribute("", "copyJMSType");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText9(v);
                                state = 27;
                                continue outer;
                            }
                            state = 27;
                            continue outer;
                        case  55 :
                            eatText19(value);
                            state = 56;
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "autoBrowseRefreshRate");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText10(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  69 :
                            attIdx = context.getAttribute("", "queueBrowseConsumerTimeout");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText11(v);
                                state = 72;
                                continue outer;
                            }
                            state = 72;
                            continue outer;
                        case  34 :
                            eatText15(value);
                            state = 35;
                            return ;
                        case  58 :
                            eatText8(value);
                            state = 59;
                            return ;
                        case  70 :
                            eatText11(value);
                            state = 71;
                            return ;
                        case  78 :
                            attIdx = context.getAttribute("", "version");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText12(v);
                                state = 81;
                                continue outer;
                            }
                            state = 81;
                            continue outer;
                        case  84 :
                            state = 87;
                            continue outer;
                        case  97 :
                            attIdx = context.getAttribute("", "classpathId");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  52 :
                            eatText23(value);
                            state = 53;
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "base64EncodeMessages");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText13(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  102 :
                            state = 105;
                            continue outer;
                        case  106 :
                            eatText28(value);
                            state = 107;
                            return ;
                        case  60 :
                            attIdx = context.getAttribute("", "maxThreadPoolSize");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText14(v);
                                state = 63;
                                continue outer;
                            }
                            state = 63;
                            continue outer;
                        case  103 :
                            attIdx = context.getAttribute("", "alias");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "driver");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "url");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getJdbcStore().add(((hermes.config.impl.JDBCStoreImpl) spawnChildFromText((hermes.config.impl.JDBCStoreImpl.class), 104, value)));
                            return ;
                        case  33 :
                            attIdx = context.getAttribute("", "displayFactoryAdmin");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText15(v);
                                state = 36;
                                continue outer;
                            }
                            state = 36;
                            continue outer;
                        case  91 :
                            attIdx = context.getAttribute("", "className");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getRenderer().add(((hermes.config.impl.RendererConfigImpl) spawnChildFromText((hermes.config.impl.RendererConfigImpl.class), 92, value)));
                            return ;
                        case  111 :
                            revertToParentFromText(value);
                            return ;
                        case  90 :
                            state = 93;
                            continue outer;
                        case  88 :
                            attIdx = context.getAttribute("", "classpathId");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getNaming().add(((hermes.config.impl.NamingConfigImpl) spawnChildFromText((hermes.config.impl.NamingConfigImpl.class), 89, value)));
                            return ;
                        case  66 :
                            attIdx = context.getAttribute("", "messageStoreSession");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText16(v);
                                state = 69;
                                continue outer;
                            }
                            state = 69;
                            continue outer;
                        case  108 :
                            state = 111;
                            continue outer;
                        case  21 :
                            attIdx = context.getAttribute("", "copyJMSReplyTo");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText17(v);
                                state = 24;
                                continue outer;
                            }
                            state = 24;
                            continue outer;
                        case  94 :
                            attIdx = context.getAttribute("", "factories");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "jar");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "noFactories");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getLoader().add(((hermes.config.impl.ClasspathConfigImpl) spawnChildFromText((hermes.config.impl.ClasspathConfigImpl.class), 95, value)));
                            return ;
                        case  79 :
                            eatText12(value);
                            state = 80;
                            return ;
                        case  48 :
                            attIdx = context.getAttribute("", "lastEditedByUser");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText18(v);
                                state = 51;
                                continue outer;
                            }
                            state = 51;
                            continue outer;
                        case  82 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getClasspathGroup().add(((hermes.config.impl.ClasspathGroupConfigImpl) spawnChildFromText((hermes.config.impl.ClasspathGroupConfigImpl.class), 83, value)));
                            return ;
                        case  10 :
                            eatText7(value);
                            state = 11;
                            return ;
                        case  28 :
                            eatText2(value);
                            state = 29;
                            return ;
                        case  54 :
                            attIdx = context.getAttribute("", "maxColumnsInStatisticsTable");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText19(v);
                                state = 57;
                                continue outer;
                            }
                            state = 57;
                            continue outer;
                        case  39 :
                            attIdx = context.getAttribute("", "embeddedMessageInBrowsePane");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText20(v);
                                state = 42;
                                continue outer;
                            }
                            state = 42;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "auditDirectory");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText21(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  100 :
                            attIdx = context.getAttribute("", "binding");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  22 :
                            eatText17(value);
                            state = 23;
                            return ;
                        case  87 :
                            state = 90;
                            continue outer;
                        case  12 :
                            attIdx = context.getAttribute("", "copyJMSExpiration");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText22(v);
                                state = 15;
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  13 :
                            eatText22(value);
                            state = 14;
                            return ;
                        case  4 :
                            eatText10(value);
                            state = 5;
                            return ;
                        case  46 :
                            eatText1(value);
                            state = 47;
                            return ;
                        case  7 :
                            eatText13(value);
                            state = 8;
                            return ;
                        case  16 :
                            eatText3(value);
                            state = 17;
                            return ;
                        case  51 :
                            attIdx = context.getAttribute("", "lookAndFeel");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText23(v);
                                state = 54;
                                continue outer;
                            }
                            state = 54;
                            continue outer;
                        case  36 :
                            attIdx = context.getAttribute("", "displayName");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText24(v);
                                state = 39;
                                continue outer;
                            }
                            state = 39;
                            continue outer;
                        case  105 :
                            state = 108;
                            continue outer;
                        case  109 :
                            attIdx = context.getAttribute("", "cacheSize");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "filterSessionMsgTypes");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _QuickFIX = ((hermes.config.impl.QuickFIXConfigImpl) spawnChildFromText((hermes.config.impl.QuickFIXConfigImpl.class), 110, value));
                            return ;
                        case  43 :
                            eatText6(value);
                            state = 44;
                            return ;
                        case  61 :
                            eatText14(value);
                            state = 62;
                            return ;
                        case  18 :
                            attIdx = context.getAttribute("", "copyJMSProviderProperties");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText25(v);
                                state = 21;
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                        case  31 :
                            eatText5(value);
                            state = 32;
                            return ;
                        case  72 :
                            attIdx = context.getAttribute("", "scrollMessagesDuringBrowse");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText26(v);
                                state = 75;
                                continue outer;
                            }
                            state = 75;
                            continue outer;
                        case  75 :
                            attIdx = context.getAttribute("", "selectorImpl");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText27(v);
                                state = 78;
                                continue outer;
                            }
                            state = 78;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText28(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getFilters().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
