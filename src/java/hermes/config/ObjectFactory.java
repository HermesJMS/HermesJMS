//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.01.03 at 11:55:46 GMT 
//


package hermes.config;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the hermes.config package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends hermes.config.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap(27, 0.75F);
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static hermes.config.impl.runtime.GrammarInfo grammarInfo = new hermes.config.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (hermes.config.ObjectFactory.class));
    public final static java.lang.Class version = (hermes.config.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((hermes.config.QuickFIXConfig.class), "hermes.config.impl.QuickFIXConfigImpl");
        defaultImplementations.put((hermes.config.NamingProviderConfig.class), "hermes.config.impl.NamingProviderConfigImpl");
        defaultImplementations.put((hermes.config.NamingConfig.class), "hermes.config.impl.NamingConfigImpl");
        defaultImplementations.put((hermes.config.JDBCStore.class), "hermes.config.impl.JDBCStoreImpl");
        defaultImplementations.put((hermes.config.RemoteConfig.class), "hermes.config.impl.RemoteConfigImpl");
        defaultImplementations.put((hermes.config.RendererConfig.class), "hermes.config.impl.RendererConfigImpl");
        defaultImplementations.put((hermes.config.WatchConfig.class), "hermes.config.impl.WatchConfigImpl");
        defaultImplementations.put((hermes.config.ProviderConfig.class), "hermes.config.impl.ProviderConfigImpl");
        defaultImplementations.put((hermes.config.ClasspathGroupConfig.class), "hermes.config.impl.ClasspathGroupConfigImpl");
        defaultImplementations.put((hermes.config.PropertyConfig.class), "hermes.config.impl.PropertyConfigImpl");
        defaultImplementations.put((hermes.config.HermesConfig.class), "hermes.config.impl.HermesConfigImpl");
        defaultImplementations.put((hermes.config.Config.class), "hermes.config.impl.ConfigImpl");
        defaultImplementations.put((hermes.config.ClasspathConfig.class), "hermes.config.impl.ClasspathConfigImpl");
        defaultImplementations.put((hermes.config.FactoryConfig.class), "hermes.config.impl.FactoryConfigImpl");
        defaultImplementations.put((hermes.config.ConnectionConfig.class), "hermes.config.impl.ConnectionConfigImpl");
        defaultImplementations.put((hermes.config.PropertySetConfig.class), "hermes.config.impl.PropertySetConfigImpl");
        defaultImplementations.put((hermes.config.SessionConfig.class), "hermes.config.impl.SessionConfigImpl");
        defaultImplementations.put((hermes.config.ProviderExtConfig.class), "hermes.config.impl.ProviderExtConfigImpl");
        defaultImplementations.put((hermes.config.DestinationConfig.class), "hermes.config.impl.DestinationConfigImpl");
        rootTagMap.put(new javax.xml.namespace.QName("", "config"), (hermes.config.Config.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: hermes.config
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @param value
     *     the value of the property to be set
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of QuickFIXConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.QuickFIXConfig createQuickFIXConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.QuickFIXConfigImpl();
    }

    /**
     * Create an instance of NamingProviderConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.NamingProviderConfig createNamingProviderConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.NamingProviderConfigImpl();
    }

    /**
     * Create an instance of NamingConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.NamingConfig createNamingConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.NamingConfigImpl();
    }

    /**
     * Create an instance of JDBCStore
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.JDBCStore createJDBCStore()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.JDBCStoreImpl();
    }

    /**
     * Create an instance of RemoteConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.RemoteConfig createRemoteConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.RemoteConfigImpl();
    }

    /**
     * Create an instance of RendererConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.RendererConfig createRendererConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.RendererConfigImpl();
    }

    /**
     * Create an instance of WatchConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.WatchConfig createWatchConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.WatchConfigImpl();
    }

    /**
     * Create an instance of ProviderConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.ProviderConfig createProviderConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.ProviderConfigImpl();
    }

    /**
     * Create an instance of ClasspathGroupConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.ClasspathGroupConfig createClasspathGroupConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.ClasspathGroupConfigImpl();
    }

    /**
     * Create an instance of PropertyConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.PropertyConfig createPropertyConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.PropertyConfigImpl();
    }

    /**
     * Create an instance of HermesConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.HermesConfig createHermesConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.HermesConfigImpl();
    }

    /**
     * Create an instance of Config
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.Config createConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.ConfigImpl();
    }

    /**
     * Create an instance of ClasspathConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.ClasspathConfig createClasspathConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.ClasspathConfigImpl();
    }

    /**
     * Create an instance of FactoryConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.FactoryConfig createFactoryConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.FactoryConfigImpl();
    }

    /**
     * Create an instance of ConnectionConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.ConnectionConfig createConnectionConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.ConnectionConfigImpl();
    }

    /**
     * Create an instance of PropertySetConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.PropertySetConfig createPropertySetConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.PropertySetConfigImpl();
    }

    /**
     * Create an instance of SessionConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.SessionConfig createSessionConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.SessionConfigImpl();
    }

    /**
     * Create an instance of ProviderExtConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.ProviderExtConfig createProviderExtConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.ProviderExtConfigImpl();
    }

    /**
     * Create an instance of DestinationConfig
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public hermes.config.DestinationConfig createDestinationConfig()
        throws javax.xml.bind.JAXBException
    {
        return new hermes.config.impl.DestinationConfigImpl();
    }

}
